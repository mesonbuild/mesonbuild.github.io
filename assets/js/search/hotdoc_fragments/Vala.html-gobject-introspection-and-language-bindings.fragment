fragment_downloaded_cb({"url":"Vala.html#gobject-introspection-and-language-bindings","fragment":"GObject Introspection and language bindings\nA 'binding' allows another programming language to use a library\nwritten in Vala. Because Vala uses the GObject type system as its\nruntime type system it is very easy to use introspection to generate a\nbinding. A Meson build of a Vala library can generate the GObject\nintrospection metadata. The metadata is then used in separate projects\nwith language specific\ntools to\ngenerate a binding.\nThe main form of metadata is a GObject Introspection Repository (GIR)\nXML file. GIRs are mostly used by languages that generate bindings at\ncompile time. Languages that generate bindings at runtime mostly use a\ntypelib file, which is generated from the GIR.\nMeson can generate a GIR as part of the build. For a Vala library the\nvala_gir option has to be set for the library:\nThe true value in install_dir tells Meson to use the default\ndirectory (i.e. share/gir-1.0 for GIRs). The fourth element in the\ninstall_dir array indicates where the GIR file will be installed.\nTo then generate a typelib file use a custom target with the\ng-ir-compiler program and a dependency on the library:\nSince Meson 1.10, use the .vala_gir() method to get a handle to the generated .gir file:\nBefore Meson 1.10, calculating the path to the input is required, as is adding a\nmanual dependency to the vala target:\n"});