fragment_downloaded_cb({"url":"Reference-manual.html#shared_library","fragment":"shared_library()\nBuilds a shared library with the given sources. Positional and keyword\narguments are the same as for library with the following\nextra keyword arguments.\n\n\nsoversion: a string specifying the soversion of this shared\nlibrary, such as 0. On Linux and Windows this is used to set the\nsoversion (or equivalent) in the filename. For example, if\nsoversion is 4, a Windows DLL will be called foo-4.dll and one\nof the aliases of the Linux shared library would be\nlibfoo.so.4. If this is not specified, the first part of version\nis used instead (see below). For example, if version is 3.6.0 and\nsoversion is not defined, it is set to 3.\n\nversion: a string specifying the version of this shared library,\nsuch as 1.1.0. On Linux and OS X, this is used to set the shared\nlibrary version in the filename, such as libfoo.so.1.1.0 and\nlibfoo.1.1.0.dylib. If this is not specified, soversion is used\ninstead (see above).\n\ndarwin_versions (since 0.48.0): an integer, string, or a list of\nversions to use for setting dylib compatibility version and\ncurrent version on macOS. If a list is specified, it must be\neither zero, one, or two elements. If only one element is specified\nor if it's not a list, the specified value will be used for setting\nboth compatibility version and current version. If unspecified, the\nsoversion will be used as per the aforementioned rules.\n\nvs_module_defs: a string, a File object, or Custom Target for a\nMicrosoft module definition file for controlling symbol exports,\netc., on platforms where that is possible (e.g. Windows).\n\n"});