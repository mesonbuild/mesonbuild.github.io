fragment_downloaded_cb({"url":"Creating-releases.html#page-description","fragment":"In addition to development, almost all projects provide periodical\nsource releases. These are standalone packages (usually either in\ntar or zip format) of the source code. They do not contain any\nrevision control metadata, only the source code.  Meson provides\na simple way of generating these, with the meson dist command.\nMeson provides a simple way of generating these. It consists of a\nsingle command (available since 0.52.0):\nor alternatively (on older meson versions with ninja backend):\nThis creates a file called projectname-version.tar.xz in the build\ntree subdirectory meson-dist. This archive contains the full\ncontents of the latest commit in revision control including all the\nsubmodules (recursively). All revision control metadata is removed.\nMeson then takes this archive and tests that it works by doing a full\ncompile + test + install cycle. If all these pass, Meson will\nthen create a SHA-256 checksum file next to the archive.\nMeson behaviour is different from Autotools. The Autotools \"dist\"\ntarget packages up the current source tree. Meson packages the latest\nrevision control commit. The reason for this is that it prevents\ndevelopers from doing accidental releases where the distributed\narchive does not match any commit in revision control (especially the\none tagged for the release).\nThe meson dist command has --include-subprojects command line\noption. When enabled, the source tree of all subprojects used by the\ncurrent build will also be included in the final tarball. This is\nuseful to distribute self contained tarball that can be built offline\n(i.e. --wrap-mode=nodownload).\nThe meson dist command has a --no-tests option to skip build and\ntests steps of generated packages. It can be used to not waste time\nfor example when done in CI that already does its own testing.\nSo with --no-tests you can tell Meson \"Do not build and test generated\npackages.\".\nSince 0.57.0 the meson dist command can now create a distribution tarball\nfor a subproject in the same git repository as the main project. This can be\nuseful if parts of the project (e.g. libraries) can be built and distributed\nseparately. In that case they can be moved into subprojects/mysub and running\nmeson dist in that directory will now create a tarball containing only the\nsource code from that subdir and not the rest of the main project or other\nsubprojects.\nFor example:\nThis produces builddir/meson-dist/mysubproject-1.0.tar.xz tarball.\n"});