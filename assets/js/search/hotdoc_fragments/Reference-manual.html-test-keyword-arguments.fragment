fragment_downloaded_cb({"url":"Reference-manual.html#test-keyword-arguments","fragment":"test() Keyword arguments\nargs: arguments to pass to the executable\nenv: environment variables to set, such as ['NAME1=value1', 'NAME2=value2'], or an environment()\nobject which allows more sophisticated\nenvironment juggling. (since 0.52.0) A dictionary is also accepted.\nis_parallel: when false, specifies that no other test must be\nrunning at the same time as this test\nshould_fail: when true the test is considered passed if the\nexecutable returns a non-zero return value (i.e. reports an error)\nsuite: 'label' (or list of labels ['label1', 'label2'])\nattached to this test. The suite name is qualified by a (sub)project\nname resulting in (sub)project_name:label. In the case of a list\nof strings, the suite names will be (sub)project_name:label1,\n(sub)project_name:label2, etc.\ntimeout: the amount of seconds the test is allowed to run, a test\nthat exceeds its time limit is always considered failed, defaults to\n30 seconds. Since 0.57 if timeout is <= 0 the test has infinite duration,\nin previous versions of Meson the test would fail with a timeout immediately.\nworkdir: absolute path that will be used as the working directory\nfor the test\ndepends (since 0.46.0): specifies that this test depends on the specified\ntarget(s), even though it does not take any of them as a command\nline argument. This is meant for cases where test finds those\ntargets internally, e.g. plugins or globbing. Those targets are built\nbefore test is executed even if they have build_by_default : false.\nprotocol (since 0.50.0): specifies how the test results are parsed and can\nbe one of exitcode, tap, or gtest. For more information about test\nharness protocol read Unit Tests. The following values are\naccepted:\npriority (since 0.52.0):specifies the priority of a test. Tests with a\nhigher priority are started before tests with a lower priority.\nThe starting order of tests with identical priorities is\nimplementation-defined. The default priority is 0, negative numbers are\npermitted.\nDefined tests can be run in a backend-agnostic way by calling\nmeson test inside the build dir, or by using backend-specific\ncommands, such as ninja test or msbuild RUN_TESTS.vcxproj.\n\n\nargs: arguments to pass to the executable\n\n\nenv: environment variables to set, such as ['NAME1=value1', 'NAME2=value2'], or an environment()\nobject which allows more sophisticated\nenvironment juggling. (since 0.52.0) A dictionary is also accepted.\n\n\nis_parallel: when false, specifies that no other test must be\nrunning at the same time as this test\n\n\nshould_fail: when true the test is considered passed if the\nexecutable returns a non-zero return value (i.e. reports an error)\n\n\nsuite: 'label' (or list of labels ['label1', 'label2'])\nattached to this test. The suite name is qualified by a (sub)project\nname resulting in (sub)project_name:label. In the case of a list\nof strings, the suite names will be (sub)project_name:label1,\n(sub)project_name:label2, etc.\n\n\ntimeout: the amount of seconds the test is allowed to run, a test\nthat exceeds its time limit is always considered failed, defaults to\n30 seconds. Since 0.57 if timeout is <= 0 the test has infinite duration,\nin previous versions of Meson the test would fail with a timeout immediately.\n\n\nworkdir: absolute path that will be used as the working directory\nfor the test\n\n\ndepends (since 0.46.0): specifies that this test depends on the specified\ntarget(s), even though it does not take any of them as a command\nline argument. This is meant for cases where test finds those\ntargets internally, e.g. plugins or globbing. Those targets are built\nbefore test is executed even if they have build_by_default : false.\n\n\nprotocol (since 0.50.0): specifies how the test results are parsed and can\nbe one of exitcode, tap, or gtest. For more information about test\nharness protocol read Unit Tests. The following values are\naccepted:\n\n\nexitcode: the executable's exit code is used by the test harness\nto record the outcome of the test).\n\ntap: Test Anything Protocol.\n\ngtest (since 0.55.0): for Google Tests.\n\nrust (since 0.56.0): for native rust tests\n\n\n\npriority (since 0.52.0):specifies the priority of a test. Tests with a\nhigher priority are started before tests with a lower priority.\nThe starting order of tests with identical priorities is\nimplementation-defined. The default priority is 0, negative numbers are\npermitted.\n\n\n\n\nexitcode: the executable's exit code is used by the test harness\nto record the outcome of the test).\n\ntap: Test Anything Protocol.\n\ngtest (since 0.55.0): for Google Tests.\n\nrust (since 0.56.0): for native rust tests\n\n"});