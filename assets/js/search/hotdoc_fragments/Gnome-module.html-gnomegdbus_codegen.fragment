fragment_downloaded_cb({"url":"Gnome-module.html#gnomegdbus_codegen","fragment":"gnome.gdbus_codegen()\nCompiles the given XML schema into gdbus source code. Takes two\npositional arguments, the first one specifies the base name to use\nwhile creating the output source and header and the second specifies\none XML file.\nStarting 0.46.0, this function returns a list of at least two custom\ntargets (in order): one for the source code and one for the header.\nThe list can then contain other custom targets for the generated documentation\nfiles depending if the keyword argument is passed (in order): the docbook\ntarget, the reStructuredText target and the markdown target.\nEarlier versions return a single custom target representing all the\noutputs. Generally, you should just add this list of targets to a top\nlevel target's source list.\nExample:\n\n\nsources: list of XML files\n\ninterface_prefix: prefix for the interface\n\nnamespace: namespace of the interface\n\nextra_args: (Added 0.47.0) additional command line arguments to pass\n\nautocleanup: (Added 0.47.0) if set generates autocleanup code. Can be one of none, objects or all\n\n\nobject_manager: (Added 0.40.0) if true generates object manager code\n\nannotations: (Added 0.43.0) list of lists of 3 strings for the annotation for 'ELEMENT', 'KEY', 'VALUE'\n\n\ndocbook: (Added 0.43.0) prefix to generate 'PREFIX'-NAME.xml docbooks\n\nrst: (Added 1.9.0) prefix to generate 'PREFIX'-NAME.rst reStructuredTexts\n\nmarkdown: (Added 1.9.0) prefix to generate 'PREFIX'-NAME.md markdowns\n\nbuild_by_default: causes, when set to true, to have this target be\nbuilt by default, that is, when invoking plain meson compile, the default\nvalue is true for all built target types\n\ninstall_dir: (Added 0.46.0) location to install the header or\nbundle depending on previous options\n\ninstall_header: (Added 0.46.0) if true, install the header file\n\n"});