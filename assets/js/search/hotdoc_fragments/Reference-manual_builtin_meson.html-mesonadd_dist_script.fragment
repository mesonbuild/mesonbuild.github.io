fragment_downloaded_cb({"url":"Reference-manual_builtin_meson.html#mesonadd_dist_script","fragment":"meson.add_dist_script()\nCauses the script given as argument to run during dist\noperation after the\ndistribution source has been generated but before it is\narchived. Note that this runs the script file that is in the\nstaging directory, not the one in the source directory. If the\nscript file cannot be found in the staging directory, it is a hard\nerror. The MESON_DIST_ROOT environment variables is set when dist scripts is\nrun.\n(since 0.54.0) The MESON_SOURCE_ROOT and MESON_BUILD_ROOT\nenvironment variables are set when dist scripts are run. They are path to the\nroot source and build directory of the main project, even when the script\ncomes from a subproject.\n(since 0.58.0) This command can be invoked from a subproject, it was a hard\nerror in earlier versions. Subproject dist scripts will only be executed\nwhen running meson dist --include-subprojects. MESON_PROJECT_SOURCE_ROOT,\nMESON_PROJECT_BUILD_ROOT and MESON_PROJECT_DIST_ROOT environment\nvariables are set when dist scripts are run. They are identical to\nMESON_SOURCE_ROOT, MESON_BUILD_ROOT and MESON_DIST_ROOT for main project\nscripts, but for subproject scripts they have the path to the root of the\nsubproject appended, usually subprojects/<subproject-name>.\n(since 1.4.0) The MESONREWRITE environment variable contains the path\nto the rewrite command that corresponds to the meson executable that\nwas used to configure the build. (This might be a different path than the\nfirst executable found in PATH.) It can be used to remove or replace\nany run_command() that depends on the revision control system from the\nbuild configuration. Note that the value will contain many parts. For\nexample, it may be python3 /path/to/meson.py introspect. The user is\nresponsible for splitting the string to an array if needed by splitting\nlexically like a UNIX shell would. If your script uses Python,\nshlex.split() is the easiest correct way to do this.\n\n\n"});