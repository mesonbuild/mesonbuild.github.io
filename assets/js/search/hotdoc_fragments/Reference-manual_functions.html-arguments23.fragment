fragment_downloaded_cb({"url":"Reference-manual_functions.html#arguments23","fragment":"Arguments\nThe function generator() accepts the following positional arguments:\n\nFinally, generator()\naccepts the following keyword arguments:\n\n\n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        exe\n        \nexe | external_program\n\n        \n        \nExecutable for the command to run\n  \n        \n\n  \n  \n      \n    \n  \n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        arguments\n        \narray[str]\n        \n        \nAn array of template strings that will be the command line arguments passed to the executable.\n  \n        \n\n  \n  \n      \n      \n        capture\n        bool\n        \n        \nWhen this argument is set to true, Meson captures stdout\nof the executable and writes it to the target file\nspecified as output.\n  \n        \n\n  (since 0.43.0)\n  default =\n  false\n  \n  \n      \n      \n        depends\n        \narray[build_tgt | custom_tgt | custom_idx]\n        \n        \nAn array of build targets that must be built before\nthis generator can be run. This is used if you have a generator that calls\na second executable that is built in this project (custom_idx was not\navailable between 0.60 and 1.4.0).\n  \n        \n\n  (since 0.51.0)\n  \n  \n      \n      \n        depfile\n        str\n        \n        \nA template string pointing to a dependency file that a\ngenerator can write listing all the additional files this target\ndepends on, for example a C compiler would list all the header files\nit included, and a change in any one of these files triggers a\nrecompilation,\n  \n        \n\n  \n  \n      \n      \n        output\n        \narray[str]\n        \n        \nTemplate string (or array of template strings) defining\nhow an output file name is (or multiple output names are) generated\nfrom a single source file name.\n  \n        \n\n  \n  \n      \n    \n  \n"});