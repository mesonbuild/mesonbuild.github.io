fragment_downloaded_cb({"url":"Dependencies.html#building-dependencies-as-subprojects","fragment":"Building dependencies as subprojects\nMany platforms do not provide a system package manager. On these\nsystems dependencies must be compiled from source. Meson's subprojects\nmake it simple to use system dependencies when they are available and\nto build dependencies manually when they are not.\nTo make this work, the dependency must have Meson build definitions\nand it must declare its own dependency like this:\nThen any project that wants to use it can write out the following\ndeclaration in their main meson.build file.\nWhat this declaration means is that first Meson tries to look up the\ndependency from the system (such as by using pkg-config). If it is not\navailable, then it builds subproject named foo and from that\nextracts a variable foo_dep. That means that the return value of\nthis function is either an external or an internal dependency object.\nSince they can be used interchangeably, the rest of the build\ndefinitions do not need to care which one it is. Meson will take care\nof all the work behind the scenes to make this work.\n"});