fragment_downloaded_cb({"url":"External-Project-module.html#add_project","fragment":"add_project()\nThis function should be called at the root directory of a project\nusing another build system. Usually in a meson.build file placed in\nthe top directory of a subproject, but could be also in any subdir.\nIts first positional argument is the name of the configure script to\nbe executed (e.g. configure), that file must be in the current\ndirectory and executable. Note that if a bootstrap script is required\n(e.g. autogen.sh when building from git instead of tarball), it can\nbe done using run_command() before calling add_project() method.\nSince 0.60.0 If the first positional argument is 'waf', special treatment\nis done for the waf build system. The waf executable must be\nfound either in the current directory, or in system PATH.\nKeyword arguments:\nReturns an ExternalProject object\n\n\nconfigure_options: An array of strings to be passed as arguments to the\nconfigure script. Some special tags will be replaced by Meson before passing\nthem to the configure script: @PREFIX@, @LIBDIR@ and @INCLUDEDIR@.\nNote that libdir and includedir paths are relative to prefix in Meson\nbut some configure scripts requires absolute path, in that case they can be\npassed as '--libdir=@PREFIX@/@LIBDIR@'. Since 0.57.0 default arguments are\nadded in case some tags are not found in configure_options:\n'--prefix=@PREFIX@', '--libdir=@PREFIX@/@LIBDIR@', and\n'--includedir=@PREFIX@/@INCLUDEDIR@'. It was previously considered a fatal\nerror to not specify them.\n\ncross_configure_options: Extra options appended to configure_options only\nwhen cross compiling. special tag @HOST@ will be replaced by\n'{}-{}-{}'.format(host_machine.cpu_family(), build_machine.system(), host_machine.system().\nIf omitted it defaults to ['--host=@HOST@'].\n\nverbose: If set to true the output of sub-commands ran to configure, build\nand install the project will be printed onto Meson's stdout.\n\nenv : environment variables to set, such as ['NAME1=value1', 'NAME2=value2'],\na dictionary, or an environment() object.\n\n"});