fragment_downloaded_cb({"url":"Precompiled-headers.html#precompiled-headers","fragment":"Precompiled headers\nParsing header files of system libraries is surprisingly expensive. A\ntypical source file has less than one thousand lines of code. In\ncontrast the headers of large libraries can be tens of thousands of\nlines. This is especially problematic with C++, where header-only\nlibraries are common and they may contain extremely complex code. This\nmakes them slow to compile.\nPrecompiled headers are a tool to mitigate this issue. Basically what\nthey do is parse the headers and then serialize the compiler's\ninternal state to disk. The downside of precompiled headers is that\nthey are tricky to set up. Meson has native support for precompiled\nheaders, but using them takes a little work.\nA precompiled header file is relatively simple. It is a header file\nthat contains #include directives for the system headers to\nprecompile. Here is a C++ example.\nIn Meson, precompiled header files are always per-target. That is, the\ngiven precompiled header is used when compiling every single file in\nthe target. Due to limitations of the underlying compilers, this\nheader file must not be in the same subdirectory as any of the source\nfiles. It is strongly recommended that you create a subdirectory\ncalled pch in the target directory and put the header files (and\nnothing else) there.\n"});