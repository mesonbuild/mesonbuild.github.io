fragment_downloaded_cb({"url":"Code-formatting.html#page-description","fragment":"Since 0.50.0\nWhen clang-format is installed and a .clang-format file is found at the main\nproject's root source directory, Meson automatically adds a clang-format target\nthat reformat all C and C++ files (currently only with Ninja backend).\nSince 0.58.0\nIt is possible to restrict files to be reformatted with optional\n.clang-format-include and .clang-format-ignore files.\nThe file .clang-format-include contains a list of patterns matching the files\nthat will be reformatted. The ** pattern matches this directory and all\nsubdirectories recursively. Empty lines and lines starting with # are ignored.\nIf .clang-format-include is not found, the pattern defaults to **/* which\nmeans all files recursively in the source directory but has the disadvantage to\nwalk the whole source tree which could be slow in the case it contains lots of\nfiles.\nExample of .clang-format-include file:\nThe file .clang-format-ignore contains a list of patterns matching the files\nthat will be excluded. Files matching the include list (see above) that match\none of the ignore pattern will not be reformatted. Unlike include patters, ignore\npatterns does not support ** and a single * match any characters including\npath separators. Empty lines and lines starting with # are ignored.\nThe build directory and file without a well known C or C++ suffix are always\nignored.\nExample of .clang-format-ignore file:\nNote that .clang-format-ignore has the same format as used by\nrun-clang-format.py.\nA new target clang-format-check has been added. It returns an error code if\nany file needs to be reformatted. This is intended to be used by CI.\n"});