fragment_downloaded_cb({"url":"Gnome-module.html#gnomemkenums","fragment":"gnome.mkenums()\nGenerates enum files for GObject using the glib-mkenums tool. The\nfirst argument is the base name of the output files, unless\nc_template and h_template are specified. In this case, the output\nfiles will be the base name of the values passed as templates.\nThis method is essentially a wrapper around the glib-mkenums tool's\ncommand line API. It is the most featureful method for enum creation.\nTypically you either provide template files or you specify the various\ntemplate sections manually as strings.\nMost libraries and applications will be using the same standard\ntemplate with only minor tweaks, in which case the\ngnome.mkenums_simple() convenience method can be used instead.\nNote that if you #include the generated header in any of the sources\nfor a build target, you must add the generated header to the build\ntarget's list of sources to codify the dependency. This is true for\nall generated sources, not just mkenums.\nAdded 0.35.0\nReturns an array of two elements which are: [c_source, header_file]\n\n\nc_template: template to use for generating the source\n\ncomments: comment passed to the command\n\nh_template: template to use for generating the header\n\nidentifier_prefix: prefix to use for the identifiers\n\ninstall_header: if true, install the generated header\n\ninstall_dir: directory to install the header\n\nsources: the list of sources to make enums with\n\nsymbol_prefix: prefix to use for the symbols\n\neprod: enum text\n\nfhead: file header\n\nfprod: file text\n\nftail: file tail\n\nvhead: value text\n\nvtail: value tail\n\n"});