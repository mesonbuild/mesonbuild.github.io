fragment_downloaded_cb({"url":"Reference-manual_functions.html#arguments53","fragment":"Arguments\nThe function test() accepts the following positional arguments:\n\nFinally, test()\naccepts the following keyword arguments:\n\n\n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        name\n        str\n        \n        \nThe unique test id\n  \n        \n\n  \n  \n      \n      \n        executable\n        \nexe | jar | external_program | file | custom_tgt | custom_idx\n\n        \n        \nThe program to execute. (Since 1.4.0) A CustomTarget is also accepted.\n  \n        \n\n  \n  \n      \n    \n  \n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        args\n        \narray[str | file | tgt | external_program]\n        \n        \nArguments to pass to the executable\n  \n        \n\n  \n  \n      \n      \n        depends\n        \narray[build_tgt | custom_tgt]\n        \n        \nspecifies that this test depends on the specified\ntarget(s), even though it does not take any of them as a command\nline argument. This is meant for cases where test finds those\ntargets internally, e.g. plugins or globbing. Those targets are built\nbefore test is executed even if they have build_by_default : false.\n  \n        \n\n  (since 0.46.0)\n  \n  \n      \n      \n        env\n        \nenv | array[str] | dict[str]\n        \n        \nenvironment variables to set, such as ['NAME1=value1', 'NAME2=value2'], or an env object which allows more sophisticated\nenvironment juggling. (Since 0.52.0) A dictionary is also accepted.\n  \n        \n\n  \n  \n      \n      \n        is_parallel\n        bool\n        \n        \nwhen false, specifies that no other test must be\nrunning at the same time as this test\n  \n        \n\n  default =\n  true\n  \n  \n      \n      \n        priority\n        int\n        \n        \nspecifies the priority of a test. Tests with a\nhigher priority are started before tests with a lower priority.\nThe starting order of tests with identical priorities is\nimplementation-defined. The default priority is 0, negative numbers are\npermitted.\n  \n        \n\n  (since 0.52.0)\n  default =\n  0\n  \n  \n      \n      \n        protocol\n        str\n        \n        \nspecifies how the test results are parsed and can\nbe one of exitcode, tap, or gtest. For more information about test\nharness protocol read Unit Tests. The following values are\naccepted:\n\n\nexitcode: the executable's exit code is used by the test harness\nto record the outcome of the test).\n\n\ntap: Test Anything Protocol.\n\n\ngtest (since 0.55.0): for Google Tests.\n\n\nrust (since 0.56.0): for native rust tests\n\n\n\n      \n\n(since 0.50.0)\ndefault =\n'exitcode'\n\n\n    \n    \n      should_fail\n      bool\n      \n      \nwhen true the test is considered passed if the\nexecutable returns a non-zero return value (i.e. reports an error)\n\n      \n\ndefault =\nfalse\n\n\n    \n    \n      suite\n      \nstr | array[str]\n      \n      \n'label' (or array of labels ['label1', 'label2'])\nattached to this test. The suite name is qualified by a (sub)project\nname resulting in (sub)project_name:label. In the case of an array\nof strings, the suite names will be (sub)project_name:label1,\n(sub)project_name:label2, etc.\n\n      \n\n\n\n    \n    \n      timeout\n      int\n      \n      \nthe amount of seconds the test is allowed to run, a test\nthat exceeds its time limit is always considered failed, defaults to\n30 seconds. Since 0.57 if timeout is <= 0 the test has infinite duration,\nin previous versions of Meson the test would fail with a timeout immediately.\n\n      \n\ndefault =\n30\n\n\n    \n    \n      verbose\n      bool\n      \n      \nif true, forces the test results to be logged as if --verbose was passed\nto meson test.\n\n      \n\n(since 0.62.0)\ndefault =\nfalse\n\n\n    \n    \n      workdir\n      str\n      \n      \nabsolute path that will be used as the working directory\nfor the test\n\n      \n\n\n\n    \n  \n\n"});