fragment_downloaded_cb({"url":"Getting-meson_ptbr.html#page-description","fragment":"Meson é implementado em Python 3, e requer a versão 3.6 ou mais nova.\nse o seu sistema operacional provê um gerenciador de pacotes, você deve\ninstalar o Meson com ele. Para plataformas que não tem um gerenciador de\npacotes, você precisa baixa-lo da página inicial do Python. Veja abaixo\npeculiaridades do Python3 específicas de plataformas.\nReleases do Meson podem ser baixadas da [página de releases do GitHub]\ne você pode executar ./meson.py de dentro do release ou do próprio repositório\ndo git sem fazer nada de especial.\nNo Windows, se você não instalar o Python com a opção do instalador que fazem\nos scripts Python executáveis, você vai ter que executar python /path/to/meson.py, onde python é o Python 3.6 ou mais novo.\nO código de desenvolvimento mais recente pode ser obtido diretamente do Git,\ne nós lutamos para garatir que ele vai estar sempre funcionando e usável. Todos\ncommits passam por um processo de pull-request que executa CI e testam diversas\nplataformas.\nO Meson está disponível no Indice de Pacotes do Python e pode ser instalado com\nsudo pip3 install meson que requer root e vai instala-lo para todo o sistema.\nSe você já baixou uma cópia do código do Meson, você pode instalar com\nsudo pip3 install path/to/source/root/.\nComo alternativa, você pode usar o pip3 install --user meson que vai instalar\no Meson para o seu usuário e não requer nenhum privilégio especial. Esse comando\nvai instalar o pacote em ~/.local/, então você terá que adicionar ~/.local/bin\npara o seu PATH, e sudo meson install vai estar completamente quebrado já que\no programa não vai estar disponível para o root. Apeas use uma cópia de usuário do Meson\nse você não se importa sobre instalar os projetos como root.\nNós provemos um instalador MSI na página de release do GitHub que pode ser usada\npara instalar tanto o Meson quanto o Ninja de uma vez para o Windows. O instalador também\ncontém uma cópia integrada do Python, então scripts que usam o módulo Python\ne não tem nenhuma dependência externa vão continuar funcionando como esperado.\nPor favor, note que essa é uma funcionalidade nova, então relatórios de bugs são esperados e bem-vindos!\nNa maioria dos casos comums, você vai precisar do executável do Ninja para usar o backend do ninja,\nque é o padrão no Meson. Esse backend pode ser usado em todas plataformas e com todas toolchains, incluindo o GCC,\nClang, Visual Studio, MinGW, ICC, ARMCC, etc.\nVocê deve usar a versão provida pelo seu gerenciador de pacotes se possível, caso contrário,\nbaixe o binário executável da página de release do projeto Ninja.\nSe você apenas usa o backend do Visual Studio (--backend=vs) para gerar soluções do Visual Studio no Windows ou o\nbackend do XCode (--backend=xcode) para gerar projetos no macOS, você não precisa do Ninja.\nQuando estiver instalando o Python 3, é altamente recomendável (mas não obrigatório)\nque você selecione as opções do instalador como a seguir:\n\n\n\nCom isso, você terá o python e o pip no PATH, e você poderá instalar o Meson com o pip. Você também vai poder\nexecutar o comando meson em qualquer shell no Windows ao invés de ter que executar py -3 com o caminho completo para\no script meson.py.\nSe você está usando o MSYS2 no Windows como seu ambiente de desenvolvimento,\npor favor se certifique que você não esteja usando o pacote msys/python para\nfornecer o Python 3. Uso o mingw32/mingw-w64-i686-python3 ou o\nIf you are using MSYS2 on Windows as your development environment,\nplease make sure that you do not use the msys/python package to\nprovide Python 3. Use either mingw32/mingw-w64-i686-python3 or mingw64/mingw-w64-x86_64-python3\ndependendo de para qual target do MinGW você está compilando.\n"});