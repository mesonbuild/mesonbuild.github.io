fragment_downloaded_cb({"url":"Adding-new-projects-to-wrapdb.html#how-it-works","fragment":"How it works\nNew wraps must be submitted as a working subproject to the wrapdb\nrepository.\nThere are two types of wraps on WrapDB - regular wraps and wraps with\nMeson build definition patches.\nWraps with Meson build definition patches work in much the same way as\nDebian: we take the unaltered upstream source package and add a new\nbuild system to it as a patch. These build systems are stored as a\nsubdirectory of subprojects/packagefiles/. They only contain build\ndefinition files. You may also think of them as an overlay to upstream\nsource.\nWraps without Meson build definition patches only contain the wrap\nmetadata describing how to fetch the project\nWhenever a new release is pushed into the wrapdb, a new tag is\ngenerated with an incremented version number, and a new release is\nadded to the wrapdb API listing. All the old releases remain\nunaltered. New commits are always done via GitHub merge requests and\nmust be reviewed by someone other than the submitter.\nNote that your Git repo with wrap must not contain the subdirectory of\nthe source release. That gets added automatically by the service. You\nalso must not commit any source code from the original tarball into\nthe wrap repository.\n"});