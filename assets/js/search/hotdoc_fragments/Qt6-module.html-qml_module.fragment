fragment_downloaded_cb({"url":"Qt6-module.html#qml_module","fragment":"qml_module\nNew in 1.7.0\nThis function requires one positional argument: the URI of the module as dotted\nidentifier string. For instance Foo.Bar\nThis method takes the following keyword arguments:\nNote: Qt uses static initialization to register its resources, if you're\nbuilding a static library you may need to call these entry points\nexplicitly. For a module Foo.Bar42 the generated resources are Foo_Bar42\nand qmlcache_Foo_Bar42 when qmlcache is used, they can be imported using\nQ_INIT_RESOURCE. All non-alphanumeric characters from the module name are\nreplaced with _. Type registration may be invoked explicitly using\nextern void qml_register_types_Foo_Bar42().\nSee Qt documentation\nfor more information\n\n\nversion: string: the module version in the form Major.Minor with an\noptional .Patch. For instance 1.0\n\n\nqml_sources (File | string | custom_target | custom_target index | generator_output)[]:\nA list of qml to be embedded in the module\n\nqml_singletons (File | string | custom_target | custom_target index | generator_output)[]:\nA list of qml to be embedded in the module and marked as singletons\n\nqml_internals (File | string | custom_target | custom_target index | generator_output)[]:\nA list of qml to be embedded in the module and marked as internal files\n\nresources_prefix string: By default resources_prefix is set to\nqt/qml. Prefix resources in the generated QRC with the given prefix\n\nimports: string[]: List of other QML modules imported by this module. Version\ncan be specified as Module/1.0 or Module/auto. See qmldir documentation\n\noptional_imports: string[]: List of other QML modules that may be imported by this\nmodule. See imports for expected format and qmldir documentation\n\ndefault_imports: string[]: List QML modules that may be loaded by\ntooling. See imports for expected format and qmldir documentation\n\ndepends_imports: string[]: List of QML extra dependencies that may not be\nimported by QML, such as dependencies existing in C++ code. See imports for\nexpected format and qmldir documentation\n\ndesigner_supported bool: If true specifies that the module supports Qt\nQuick Designer\n\nmoc_headers (File | string | custom_target | custom_target index | generator_output)[]:\nA list of headers to be transpiled into .cpp files. See Qt\ndocumentation\nregarding how to register C++ class as Qml elements. Note: due to some\nlimitations of qmltyperegistrar, all headers that declare QML types need to\nbe accessible in the project's include path.\n\nnamespace: str: optional C++ namespace for plugin and generation code\n\ntypeinfo: str: optional name for the generated qmltype file, by default it\nwill be generated as {target_name}.qmltype\n\n\nrcc_extra_arguments: string[]: Extra arguments to pass directly to qt-rcc\n\n\nmoc_extra_arguments: string[]: Extra arguments to pass directly to qt-moc\n\n\nqmlcachegen_extra_arguments: string[]: Extra arguments to pass directly to\nqmlcachegen\n\n\nqmltyperegistrar_extra_arguments: string[]: Extra arguments to pass directly to\nqmltyperegistrar\n\n\ngenerate_qmldir: bool: If true (default) auto generate the qmldir file\n\ngenerate_qmltype: bool: If true (default) auto generate qmltype file\n\ncachegen: bool: If true (default) preprocess QML and JS files with\nqmlcachegen\n\nmethod string: The method to use to detect Qt, see dependency()\n\n\npreserve_paths bool: If true, specifies that the output\nfiles need to maintain their directory structure inside the target temporary\ndirectory. For instance, when a file called subdir/one.input is processed\nit generates a file {target private directory}/subdir/one.out when true,\nand {target private directory}/one.out when false (default).\n\ndependencies: dependency objects whose include directories are used by\nmoc.\n\ninclude_directories (string | IncludeDirectory)[]: A list of include_directory()\nobjects used when transpiling the .moc files\n\ninstall bool: when true, this target is installed during the install step (optional).\n\ninstall_dir string: directory to install to (optional).\n\n"});