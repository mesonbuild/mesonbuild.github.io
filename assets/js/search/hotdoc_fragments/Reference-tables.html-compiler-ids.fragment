fragment_downloaded_cb({"url":"Reference-tables.html#compiler-ids","fragment":"Compiler ids\nThese are return values of the get_id (Compiler family) and\nget_argument_syntax (Argument syntax) method in a compiler object.\n\n\n\n Value\n Compiler family\n Argument syntax\n\n\n\n\n arm\n ARM compiler\n\n\n\n armclang\n ARMCLANG compiler\n\n\n\n c2000\n Texas Instruments C2000 compiler\n\n\n\n ccomp\n The CompCert formally-verified C compiler\n\n\n\n ccrx\n Renesas RX Family C/C++ compiler\n\n\n\n clang\n The Clang compiler\n gcc\n\n\n clang-cl\n The Clang compiler (MSVC compatible driver)\n msvc\n\n\n dmd\n D lang reference compiler\n\n\n\n emscripten\n Emscripten WASM compiler\n\n\n\n flang\n Flang Fortran compiler\n\n\n\n g95\n The G95 Fortran compiler\n\n\n\n gcc\n The GNU Compiler Collection\n gcc\n\n\n intel\n Intel compiler (Linux and Mac)\n gcc\n\n\n intel-cl\n Intel compiler (Windows)\n msvc\n\n\n lcc\n Elbrus C/C++/Fortran Compiler\n\n\n\n llvm\n LLVM-based compiler (Swift, D)\n\n\n\n mono\n Xamarin C# compiler\n\n\n\n msvc\n Microsoft Visual Studio\n msvc\n\n\n nagfor\n The NAG Fortran compiler\n\n\n\n nvidia_hpc\n NVidia HPC SDK compilers\n\n\n\n open64\n The Open64 Fortran Compiler\n\n\n\n pathscale\n The Pathscale Fortran compiler\n\n\n\n pgi\n Portland PGI C/C++/Fortran compilers\n\n\n\n rustc\n Rust compiler\n\n\n\n sun\n Sun Fortran compiler\n\n\n\n valac\n Vala compiler\n\n\n\n xc16\n Microchip XC16 C compiler\n\n\n\n cython\n The Cython compiler\n\n\n\n\n"});