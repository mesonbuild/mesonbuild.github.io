fragment_downloaded_cb({"url":"Contributing.html#matrix","fragment":"matrix\nThe matrix section can be used to define a test matrix to run\nproject tests with different Meson options.\nIn the options dict, all possible options and their values are\nspecified. Each key in the options dict is a Meson option. It stores\na list of all potential values in a dict format.\nEach value must contain the val key for the value of the option.\nnull can be used for adding matrix entries without the current\noption.\nThe skip_on_env, skip_on_jobname and skip_on_os keys (as described below)\nmay be used in the value to skip that matrix entry, based on the current\nenvironment.\nSimilarly, the compilers key can be used to define a mapping of\ncompilers to languages that are required for this value.\nSpecific option combinations can be excluded with the exclude\nsection. It should be noted that exclude does not require exact\nmatches. Instead, any matrix entry containing all option value\ncombinations in exclude will be excluded. Thus an empty dict ({})\nto will match all elements in the test matrix.\nThe above example will produce the following matrix entries:\n\nopt1=abc\nopt1=abc opt2=true\nopt1=abc opt2=false\nopt1=qwert\nopt1=qwert opt2=true\n\n"});