fragment_downloaded_cb({"url":"Reference-manual.html#build_machine-object","fragment":"\nbuild_machine object\nProvides information about the build machine â€” the machine that is\ndoing the actual compilation. See\nCross-compilation. It has the following\nmethods:\ncpu_family(): returns the CPU family name. This\ntable contains all known CPU\nfamilies. These are guaranteed to continue working.\ncpu(): returns a more specific CPU name, such as i686, amd64,\netc.\nsystem(): returns the operating system name.  This\ntable Lists all of\nthe currently known Operating System names, these are guaranteed to\ncontinue working.\nendian(): returns big on big-endian systems and little on\nlittle-endian systems.\nCurrently, these values are populated using\nplatform.system()\nand\nplatform.machine(). If\nyou think the returned values for any of these are incorrect for your\nsystem or CPU, or if your OS is not in the linked table, please file\na bug report with\ndetails and we'll look into it.\n\n\ncpu_family(): returns the CPU family name. This\ntable contains all known CPU\nfamilies. These are guaranteed to continue working.\n\n\ncpu(): returns a more specific CPU name, such as i686, amd64,\netc.\n\n\nsystem(): returns the operating system name.  This\ntable Lists all of\nthe currently known Operating System names, these are guaranteed to\ncontinue working.\n\n\nendian(): returns big on big-endian systems and little on\nlittle-endian systems.\n\n\n"});