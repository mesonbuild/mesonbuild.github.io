fragment_downloaded_cb({"url":"Tutorial.html#page-description","fragment":"This page shows from the ground up how to create a Meson build\ndefinition for a simple project. Then we expand it to use external\ndependencies to show how easily they can be integrated into your\nproject.\nThis tutorial has been written mostly for Linux usage. It assumes that\nyou have GTK development libraries available on the system. On\nDebian-derived systems such as Ubuntu they can be installed with the\nfollowing command:\nIt is possible to build the GUI application on other platforms, such\nas Windows and macOS, but you need to install the needed dependencies.\nLet's start with the most basic of programs, the classic hello\nexample. First we create a file main.c which holds the source. It\nlooks like this.\nThen we create a Meson build description and put it in a file called\nmeson.build in the same directory. Its contents are the following.\nThat is all. Note that unlike Autotools you do not need to add any\nsource headers to the list of\nsources.\nWe are now ready to build our application. First we need\nto initialize the build by going into the source directory and issuing\nthe following commands.\nWe create a separate build directory to hold all of the compiler\noutput. Meson is different from some other build systems in that it\ndoes not permit in-source builds. You must always create a separate\nbuild directory. Common convention is to put the default build\ndirectory in a subdirectory of your top level source directory.\nWhen Meson is run it prints the following output.\nNow we are ready to build our code.\nIf your Meson version is newer than 0.55.0, you can use the new\nbackend-agnostic build command:\nFor the rest of this document we are going to use the latter form.\nOnce the executable is built we can run it.\nThis produces the expected output.\nJust printing text is a bit old fashioned. Let's update our program to\ncreate a graphical window instead. We'll use the\nGTK+ widget toolkit. First we edit the main file to\nuse GTK+. The new version looks like this.\nThen we edit the Meson file, instructing it to find and use the GTK+\nlibraries.\nIf your app needs to use multiple libraries, you need to use separate\ndependency() calls for each, like so:\nWe don't need it for the current example.\nNow we are ready to build. The thing to notice is that we do not\nneed to recreate our build directory, run any sort of magical commands\nor the like. Instead we just type the exact same command as if we were\nrebuilding our code without any build system changes.\nOnce you have set up your build directory the first time, you don't\never need to run the meson command again. You always just run meson compile. Meson will automatically detect when you have done changes\nto build definitions and will take care of everything so users don't\nhave to care. In this case the following output is produced.\nNote how Meson noticed that the build definition has changed and reran\nitself automatically. The program is now ready to be run:\nThis creates the following GUI application.\n\n"});