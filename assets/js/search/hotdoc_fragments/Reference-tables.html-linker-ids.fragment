fragment_downloaded_cb({"url":"Reference-tables.html#linker-ids","fragment":"Linker ids\nThese are return values of the get_linker_id method in a compiler object.\nFor languages that don't have separate dynamic linkers such as C# and Java, the\nget_linker_id will return the compiler name.\n\n\n\n Value\n Linker family\n\n\n\n\n ld.bfd\n The GNU linker\n\n\n ld.eld\n Qualcomm's embedded linker\n\n\n ld.gold\n The GNU gold linker\n\n\n ld.lld\n The LLVM linker, with the GNU interface\n\n\n ld.mold\n The fast MOLD linker\n\n\n ld.solaris\n Solaris and illumos\n\n\n ld.wasm\n emscripten's wasm-ld linker\n\n\n ld.zigcc\n The Zig linker (C/C++ frontend; GNU-like)\n\n\n ld64\n Apple ld64\n\n\n ld64.lld\n The LLVM linker, with the ld64 interface\n\n\n link\n MSVC linker\n\n\n lld-link\n The LLVM linker, with the MSVC interface\n\n\n xilink\n Used with Intel-cl only, MSVC like\n\n\n optlink\n optlink (used with DMD)\n\n\n rlink\n The Renesas linker, used with CCrx only\n\n\n xc16-ar\n The Microchip linker, used with XC16 only\n\n\n ar2000\n The Texas Instruments linker, used with C2000 only\n\n\n ti-ar\n The Texas Instruments linker\n\n\n ar6000\n The Texas Instruments linker, used with C6000 only\n\n\n armlink\n The ARM linker (arm and armclang compilers)\n\n\n pgi\n Portland/Nvidia PGI\n\n\n nvlink\n Nvidia Linker used with cuda\n\n\n ccomp\n CompCert used as the linker driver\n\n\n mwldarm\n The Metrowerks Linker with the ARM interface, used with mwccarm only\n\n\n mwldeppc\n The Metrowerks Linker with the PowerPC interface, used with mwcceppc only\n\n\n tasking\n TASKING VX-toolset\n\n\n\n"});