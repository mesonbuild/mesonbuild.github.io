fragment_downloaded_cb({"url":"Reference-manual.html#add_global_arguments","fragment":"add_global_arguments()\nAdds the positional arguments to the compiler command line. This\nfunction has two keyword arguments:\nlanguage: specifies the language(s) that the arguments should be\napplied to. If a list of languages is given, the arguments are added\nto each of the corresponding compiler command lines. Note that there\nis no way to remove an argument set in this way. If you have an\nargument that is only used in a subset of targets, you have to specify\nit in per-target flags.\nnative (since 0.48.0): a boolean specifying whether the arguments should be\napplied to the native or cross compilation. If true the arguments\nwill only be used for native compilations. If false the arguments\nwill only be used in cross compilations. If omitted, the flags are\nadded to native compilations if compiling natively and cross\ncompilations (only) when cross compiling.\nThe arguments are used in all compiler invocations with the exception\nof compile tests, because you might need to run a compile test with\nand without the argument in question. For this reason only the\narguments explicitly specified are used during compile tests.\nNote: Usually you should use add_project_arguments instead,\nbecause that works even when you project is used as a subproject.\nNote: You must pass always arguments individually arg1, arg2, ... rather than as a string 'arg1 arg2', ...\n\n\nlanguage: specifies the language(s) that the arguments should be\napplied to. If a list of languages is given, the arguments are added\nto each of the corresponding compiler command lines. Note that there\nis no way to remove an argument set in this way. If you have an\nargument that is only used in a subset of targets, you have to specify\nit in per-target flags.\n\n\nnative (since 0.48.0): a boolean specifying whether the arguments should be\napplied to the native or cross compilation. If true the arguments\nwill only be used for native compilations. If false the arguments\nwill only be used in cross compilations. If omitted, the flags are\nadded to native compilations if compiling natively and cross\ncompilations (only) when cross compiling.\n\n\n"});