fragment_downloaded_cb({"url":"Python-module.html#find_installation","fragment":"find_installation()\nFind a python installation matching name_or_path.\nThat argument is optional, if not provided then the returned python\ninstallation will be the one used to run Meson.\nIf provided, it can be:\nA simple name, eg python-2.7, Meson will look for an external program\nnamed that way, using find_program\nA path, eg /usr/local/bin/python3.4m\nOne of python2 or python3: in either case, the module will try\nsome alternative names: py -2 or py -3 on Windows, and python\neverywhere. In the latter case, it will check whether the version\nprovided by the sysconfig module matches the required major version\nKeyword arguments are the following:\nReturns: a python installation\n\n\nA simple name, eg python-2.7, Meson will look for an external program\nnamed that way, using find_program\n\n\nA path, eg /usr/local/bin/python3.4m\n\n\nOne of python2 or python3: in either case, the module will try\nsome alternative names: py -2 or py -3 on Windows, and python\neverywhere. In the latter case, it will check whether the version\nprovided by the sysconfig module matches the required major version\n\n\n\n\nrequired: by default, required is set to true and Meson will\nabort if no python installation can be found. If required is set to false,\nMeson will continue even if no python installation was found. You can\nthen use the .found() method on the returned object to check\nwhether it was found or not. Since 0.48.0  the value of a\nfeature option can also be passed to the\nrequired keyword argument.\n\ndisabler: if true and no python installation can be found, return a\ndisabler object instead of a not-found object.\nSince 0.49.0\n\n\nmodules: a list of module names that this python installation must have.\nSince 0.51.0\n\n\n"});