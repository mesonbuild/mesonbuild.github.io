fragment_downloaded_cb({"url":"Builtin-options.html#python-module","fragment":"Python module\nSince 0.60.0 The python.platlibdir and python.purelibdir options are used\nby the python module methods python.install_sources() and\npython.get_install_dir(); Meson tries to detect the correct installation paths\nand make them relative to the installation prefix by default which will often\nresult in the interpreter not finding the installed python modules unless\nprefix is /usr on Linux, or, for instance, C:\\Python39 on Windows. These\noptions can be absolute paths outside of prefix.\nSince 0.62.0 The python.install_env option is used to detect the correct\ninstallation path. Setting to system will avoid making the paths relative to\nprefix and instead use the global site-packages of the selected python\ninterpreter directly, even if it is a venv. Setting to venv will instead use\nthe paths for the virtualenv the python found installation comes from (or fail\nif it is not a virtualenv).  Setting to auto will check if the found\ninstallation is a virtualenv, and use venv or system as appropriate (but\nnever prefix). Note that Conda environments are treated as system.\nThis option is mutually exclusive with the platlibdir/purelibdir.\nFor backwards compatibility purposes, the default install_env is prefix.\nSince 1.2.0 The python.bytecompile option can be used to enable compiling\npython bytecode. Bytecode has 3 optimization levels:\nTo this, Meson adds level -1, which is to not attempt to compile bytecode at\nall.\nSince 1.3.0 The python.allow_limited_api option affects whether the\nlimited_api keyword argument of the extension_module method is respected.\nIf set to false, the effect of the limited_api argument is disabled.\n\n0, bytecode without optimizations\n1, bytecode with some optimizations\n2, bytecode with some more optimizations\n\n\n\n\n Option\n Default value\n Possible values\n Description\n\n\n\n\n bytecompile\n 0\n integer from -1 to 2\n What bytecode optimization level to use (Since 1.2.0)\n\n\n install_env\n prefix\n {auto,prefix,system,venv}\n Which python environment to install to (Since 0.62.0)\n\n\n platlibdir\n\n Directory path\n Directory for site-specific, platform-specific files (Since 0.60.0)\n\n\n purelibdir\n\n Directory path\n Directory for site-specific, non-platform-specific files  (Since 0.60.0)\n\n\n allow_limited_api\n true\n true, false\n Disables project-wide use of the Python Limited API (Since 1.3.0)\n\n\n\n"});