fragment_downloaded_cb({"url":"Reference-manual_functions.html#arguments49","fragment":"Arguments\nThe function subproject() accepts the following positional arguments:\nName of the subproject. The subproject must exist in the subprojects\ndirectory (or the directory specified in the subproject_dir of\nproject()) as a directory or wrap file.\n\nFinally, subproject()\naccepts the following keyword arguments:\nAn array of default option values\nthat override those set in the subproject's meson_options.txt\n(like default_options in project(), they only have effect when\nMeson is run for the first time, and command line arguments override\nany default options in build files). (since 0.54.0): default_library\nbuilt-in option can also be overridden.\n(since 0.37.0)\nIf true, Meson will abort if the subproject could not be setup. You can set\nthis to false and then use the .found() method on the subproject object.\nYou may also pass the value of a\nfeature option, same as dependency().\n(since 0.48.0)\ndefault =\n  true\nWorks just like the same as in dependency().\nIt specifies what version the subproject should be, as an example >=1.0.1.\n\n\n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        subproject_name\n        str\n        \n        \nName of the subproject. The subproject must exist in the subprojects\ndirectory (or the directory specified in the subproject_dir of\nproject()) as a directory or wrap file.\n  \n        \n\n  \n  \n      \n    \n  \n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        default_options\n        \nlist[str]\n        \n        \nAn array of default option values\nthat override those set in the subproject's meson_options.txt\n(like default_options in project(), they only have effect when\nMeson is run for the first time, and command line arguments override\nany default options in build files). (since 0.54.0): default_library\nbuilt-in option can also be overridden.\n  \n        \n\n  (since 0.37.0)\n  \n  \n      \n      \n        required\n        \nbool | feature\n\n        \n        \nIf true, Meson will abort if the subproject could not be setup. You can set\nthis to false and then use the .found() method on the subproject object.\nYou may also pass the value of a\nfeature option, same as dependency().\n  \n        \n\n  (since 0.48.0)\n  default =\n  true\n  \n  \n      \n      \n        version\n        str\n        \n        \nWorks just like the same as in dependency().\nIt specifies what version the subproject should be, as an example >=1.0.1.\n  \n        \n\n  \n  \n      \n    \n  \n"});