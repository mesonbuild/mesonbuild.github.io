fragment_downloaded_cb({"url":"Continuous-Integration.html#page-description","fragment":"Here you will find snippets to use Meson with various CI such as\nTravis and AppVeyor.\nPlease file an issue\nif these instructions don't work for you.\nTravis with Docker gives access to newer non-LTS Ubuntu versions with\npre-installed libraries of your choice.\nThis yml file is derived from the\nconfiguration used by Meson\nfor running its own tests.\nCircleCi can work for spinning all of the\nLinux images you wish. Here's a sample yml file for use with that.\nFor CI on Windows, AppVeyor has a wide\nselection of default\nconfigurations.\nAppVeyor also has\nMacOS and\nLinux CI\nimages. This is a sample appveyor.yml file for Windows with Visual\nStudio 2015 and 2017.\nFor Qt 5, add the following line near the PYTHON_ROOT assignment:\nAnd afterwards add %QT_ROOT%\\bin to the PATH variable.\nYou might have to adjust your build matrix as there are, for example,\nno msvc2017 32-bit builds. Visit the Build\nEnvironment page in\nthe AppVeyor docs for more details.\nThe following statement is sufficient for meson to find Boost:\nNon-Docker Travis-CI builds can use Linux, MacOS or Windows.\nSet the desired compiler(s) in the build matrix.\nThis example is for Linux (Ubuntu 18.04) and C.\nGitHub Actions are distinct from Azure Pipelines in their workflow\nsyntax. It can be easier to setup specific CI tasks in Actions than\nPipelines, depending on the particular task. This is an example file:\n.github/workflows/ci_meson.yml supposing the project is C-based, using\nGCC on Linux, Mac and Windows. The optional on: parameters only run\nthis CI when the C code is changed--corresponding ci_python.yml might\nrun only on \"**.py\" file changes.\n"});