fragment_downloaded_cb({"url":"Reference-manual.html#vcs_tag","fragment":"vcs_tag()\nThis command detects revision control commit information at build time\nand places it in the specified output file. This file is guaranteed to\nbe up to date on every build. Keywords are similar to custom_target.\nMeson will read the contents of input, substitute the\nreplace_string with the detected revision number, and write the\nresult to output. This method returns a\ncustom_target object that (as usual) should be\nused to signal dependencies if other targets use the file outputted\nby this.\nFor example, if you generate a header with this and want to use that\nin a build target, you must add the return value to the sources of\nthat build target. Without that, Meson will not know the order in\nwhich to build the targets.\nIf you desire more specific behavior than what this command provides,\nyou should use custom_target.\n\n\ncommand: string list with the command to execute, see\ncustom_target for details on how this command\nmust be specified\n\nfallback: version number to use when no revision control\ninformation is present, such as when building from a release tarball\n(defaults to meson.project_version())\n\ninput: file to modify (e.g. version.c.in) (required)\n\noutput: file to write the results to (e.g. version.c) (required)\n\nreplace_string: string in the input file to substitute with the\ncommit information (defaults to @VCS_TAG@)\n\n"});