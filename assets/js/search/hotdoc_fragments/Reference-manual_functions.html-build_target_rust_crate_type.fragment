fragment_downloaded_cb({"url":"Reference-manual_functions.html#build_target_rust_crate_type","fragment":"Set the specific type of rust crate to compile (when compiling rust).\nIf the target is an executable() this defaults to \"bin\", the only\nallowed value.\nIf it is a static_library() it defaults to \"lib\", and may be \"lib\",\n\"staticlib\", or \"rlib\". If \"lib\" then Rustc will pick a default, \"staticlib\"\nmeans a C ABI library, \"rlib\" means a Rust ABI.\nIf it is a shared_library() it defaults to \"lib\", and may be \"lib\",\n\"dylib\", \"cdylib\", or \"proc-macro\". If \"lib\" then Rustc will pick a\ndefault, \"cdylib\" means a C ABI library, \"dylib\" means a Rust ABI, and\n\"proc-macro\" is a special rust procedural macro crate.\n\"proc-macro\" is new in 0.62.0.\nSince 1.3.0 this is deprecated and replaced by \"rust_abi\" keyword argument.\nproc_macro crates are now handled by the rust.proc_macro()\nmethod.\n(since 0.42.0)\nDEPRECATED\nin 1.3.0\n"});