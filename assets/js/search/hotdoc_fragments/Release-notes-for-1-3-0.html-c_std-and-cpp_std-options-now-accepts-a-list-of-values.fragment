fragment_downloaded_cb({"url":"Release-notes-for-1-3-0.html#c_std-and-cpp_std-options-now-accepts-a-list-of-values","fragment":"\nc_std and cpp_std options now accepts a list of values\nProjects that prefer GNU C, but can fallback to ISO C, can now set, for\nexample, default_options: 'c_std=gnu11,c11', and it will use gnu11 when\navailable, but fallback to c11 otherwise. It is an error only if none of the\nvalues are supported by the current compiler.\nLikewise, a project that can take benefit of c++17 but can still build with\nc++11 can set default_options: 'cpp_std=c++17,c++11'.\nThis allows us to deprecate gnuXX values from the MSVC compiler. That means\nthat default_options: 'c_std=gnu11' will now print a warning with MSVC\nbut fallback to c11. No warning is printed if at least one\nof the values is valid, i.e. default_options: 'c_std=gnu11,c11'.\nIn the future that deprecation warning will become an hard error because\nc_std=gnu11 should mean GNU is required, for projects that cannot be\nbuilt with MSVC for example.\n"});