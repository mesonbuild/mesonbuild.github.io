fragment_downloaded_cb({"url":"Configuring-a-build-directory.html#page-description","fragment":"Often you want to change the settings of your build after it has been\ngenerated. For example you might want to change from a debug build\ninto a release build, set custom compiler flags, change the build\noptions provided in your meson_options.txt file and so on.\nThe main tool for this is the meson configure command.\nYou invoke meson configure by giving it the location of your build\ndir. If omitted, the current working directory is used instead. Here's\na sample output for a simple project.\nThese are all the options available for the current project arranged\ninto related groups. The first column in every field is the name of\nthe option. To set an option you use the -D option. For example,\nchanging the installation prefix from /usr/local to /tmp/testroot\nyou would issue the following command.\nThen you would run your build command (usually meson compile), which\nwould cause Meson to detect that the build setup has changed and do\nall the work required to bring your build tree up to date.\nSince 0.50.0, it is also possible to get a list of all build options\nby invoking meson configure with the\nproject source directory or the path to the root meson.build. In\nthis case, meson will print the default values of all options similar\nto the example output from above.\n"});