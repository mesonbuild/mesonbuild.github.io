fragment_downloaded_cb({"url":"Creating-OSX-packages.html#external-libraries","fragment":"External libraries\nMost applications use third party frameworks and libraries.\nIf it is the case for your project, you need to add them to\nthe bundle so it will work on other peoples' machines.\nAs an example we are going to use the SDL2\nframework. In order to bundle it in our app, we first specify an\ninstaller script to run.\nThe install script does two things. First it copies the whole\nframework into our bundle.\nThen it needs to alter the library search path of our\nexecutable(s). This tells OSX that the libraries your app needs are\ninside your bundle. In the case of SDL2, the invocation goes like\nthis:\nThis is the part of OSX app bundling that you must always do\nmanually. OSX dependencies come in many shapes and forms and\nunfortunately there is no reliable automatic way to determine how each\ndependency should be handled. Frameworks go to the Frameworks\ndirectory while plain .dylib files usually go to\nContents/Resources/lib (but you can put them wherever you like). To\nget this done you have to check what your program links against with\notool -L /path/to/binary and manually add the copy and fix steps to\nyour install script. Do not copy system libraries inside your bundle,\nthough.\nAfter this you have a fully working, self-contained OSX app bundle\nready for distribution.\n"});