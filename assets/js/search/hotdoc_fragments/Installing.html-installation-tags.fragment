fragment_downloaded_cb({"url":"Installing.html#installation-tags","fragment":"Installation tags\nSince 0.60.0\nIt is possible to install only a subset of the installable files using\nmeson install --tags tag1,tag2 command line. When --tags is specified, only\nfiles that have been tagged with one of the tags are going to be installed.\nThis is intended to be used by packagers (e.g. distributions) who typically\nwant to split libfoo, libfoo-dev and libfoo-doc packages. Instead of\nduplicating the list of installed files per category in each packaging system,\nit can be maintained in a single place, directly in upstream meson.build files.\nMeson sets predefined tags on some files. More tags are likely to be added over\ntime, please help extending the list of well known categories.\nCustom installation tag can be set using the install_tag keyword argument\non various functions such as custom_target(), configure_file(),\ninstall_subdir() and install_data(). See their respective documentation\nin the reference manual for details. It is recommended to use one of the\npredefined tags above when possible.\nInstallable files that have not been tagged either automatically by Meson, or\nmanually using install_tag keyword argument won't be installed when --tags\nis used. They are reported at the end of <builddir>/meson-logs/meson-log.txt,\nit is recommended to add missing install_tag to have a tag on each installable\nfiles.\n\n\ndevel:\n\n\nstatic_library(),\n\ninstall_headers(),\n\npkgconfig.generate(),\n\ngnome.generate_gir() - .gir file,\nFiles installed into libdir and with .a or .pc extension,\nFile installed into includedir.\n\n\n\nruntime:\n\n\nexecutable(),\n\nshared_library(),\n\nshared_module(),\n\njar(),\nFiles installed into bindir.\nFiles installed into libdir and with .so or .dll extension.\n\n\n\npython-runtime:\n\n\npython.install_sources().\n\n\n\nman:\n\n\ninstall_man().\n\n\n\ndoc:\n\n\ngnome.gtkdoc(),\n\ngnome.yelp(),\n\nhotdoc.generate_doc().\n\n\n\ni18n:\n\n\ni18n.gettext(),\n\nqt.compile_translations(),\nFiles installed into localedir.\n\n\n\ntypelib:\n\n\ngnome.generate_gir() - .typelib file.\n\n\n\nbin:\n\nScripts and executables bundled with a library meant to be used by end\nusers.\n\n\n\nbin-devel:\n\nScripts and executables bundled with a library meant to be used by\ndevelopers (i.e. build tools).\n\n\n\n\n\nstatic_library(),\n\ninstall_headers(),\n\npkgconfig.generate(),\n\ngnome.generate_gir() - .gir file,\nFiles installed into libdir and with .a or .pc extension,\nFile installed into includedir.\n\n\n\nexecutable(),\n\nshared_library(),\n\nshared_module(),\n\njar(),\nFiles installed into bindir.\nFiles installed into libdir and with .so or .dll extension.\n\n\n\npython.install_sources().\n\n\n\ninstall_man().\n\n\n\ngnome.gtkdoc(),\n\ngnome.yelp(),\n\nhotdoc.generate_doc().\n\n\n\ni18n.gettext(),\n\nqt.compile_translations(),\nFiles installed into localedir.\n\n\n\ngnome.generate_gir() - .typelib file.\n\n\nScripts and executables bundled with a library meant to be used by end\nusers.\n\n\nScripts and executables bundled with a library meant to be used by\ndevelopers (i.e. build tools).\n\n"});