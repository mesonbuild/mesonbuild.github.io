fragment_downloaded_cb({"url":"Installing.html#page-description","fragment":"Invoked via the following command (available\nsince 0.47.0):\nor alternatively (on older meson versions with ninja backend):\nBy default Meson will not install anything. Build targets can be\ninstalled by tagging them as installable in the definition.\nThere is usually no need to specify install paths or the like. Meson\nwill automatically install it to the standards-conforming location. In\nthis particular case the executable is installed to the bin\nsubdirectory of the install prefix. However if you wish to override\nthe install dir, you can do that with the install_dir argument.\nOther install commands are the following.\ninstall_data() supports rename of the file since 0.46.0.\nSometimes you want to copy an entire subtree directly. For this use\ncase there is the install_subdir command, which can be used like\nthis.\nMost of the time you want to install files relative to the install\nprefix. Sometimes you need to go outside of the prefix (such as writing\nfiles to /etc instead of /usr/etc. This can be accomplished by\ngiving an absolute install path.\nSometimes you need to do more than just install basic targets. Meson\nmakes this easy by allowing you to specify a custom script to execute\nat install time. As an example, here is a script that generates an\nempty file in a custom directory.\nAs you can see, Meson sets up some environment variables to help you\nwrite your script (DESTDIR is not set by Meson, it is inherited from\nthe outside environment). In addition to the install prefix, Meson\nalso sets the variables MESON_SOURCE_ROOT and MESON_BUILD_ROOT.\nTelling Meson to run this script at install time is a one-liner.\nThe argument is the name of the script file relative to the current\nsubdirectory.\nSometimes you need to install to a different directory than the\ninstall prefix. This is most common when building rpm or deb\npackages. This is done with the DESTDIR environment variable and it\nis used just like with other build systems:\nInstallation behaviour can be further customized using additional\narguments.\nFor example, if you wish to install the current setup without\nrebuilding the code (which the default install target always does) and\nonly installing those files that have changed, you would run this\ncommand in the build tree:\nSometimes it is necessary to only install a subsection of output files\nor install them in different directories. This can be done by\nspecifying install_dir as an array rather than a single string. The\narray must have as many items as there are outputs and each entry\nspecifies how the corresponding output file should be installed. For\nexample:\nIn this case file1 would be installed to /prefix/path1/file1,\nfile2 would not be installed at all and file3 would be installed\nto `/prefix/path3/file3'.\n"});