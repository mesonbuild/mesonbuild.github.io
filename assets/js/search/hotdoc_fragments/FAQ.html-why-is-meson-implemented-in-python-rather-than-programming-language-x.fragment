fragment_downloaded_cb({"url":"FAQ.html#why-is-meson-implemented-in-python-rather-than-programming-language-x","fragment":"Why is Meson implemented in Python rather than [programming language X]?\nBecause build systems are special in ways normal applications aren't.\nPerhaps the biggest limitation is that because Meson is used to build\nsoftware at the very lowest levels of the OS, it is part of the core\nbootstrap for new systems. Whenever support for a new CPU architecture\nis added, Meson must run on the system before software using it can be\ncompiled natively. This requirement adds two hard limitations.\nThe first one is that Meson must have the minimal amount of\ndependencies, because they must all be built during the bootstrap to\nget Meson to work.\nThe second is that Meson must support all CPU architectures, both\nexisting and future ones. As an example many new programming languages\nhave only an LLVM based compiler available. LLVM has limited CPU\nsupport compared to, say, GCC, and thus bootstrapping Meson on such\nplatforms would first require adding new processor support to\nLLVM. This is in most cases unfeasible.\nA further limitation is that we want developers on as many platforms\nas possible to submit to Meson development using the default tools\nprovided by their operating system. In practice what this means is\nthat Windows developers should be able to contribute using nothing but\nVisual Studio.\nAt the time of writing (April 2018) there are only three languages\nthat could fulfill these requirements:\nOut of these we have chosen Python because it is the best fit for our\nneeds.\n\nC\nC++\nPython\n\n"});