fragment_downloaded_cb({"url":"Reference-manual_returned_dep.html#arguments5","fragment":"Arguments\nThe method dep.get_variable() accepts the following positional arguments:\n\nFinally, dep.get_variable()\naccepts the following keyword arguments:\n\n\n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        varname\n        str\n        \n        \nThis argument is used as a default value\nfor cmake, pkgconfig, configtool, internal and system keyword\narguments. It is useful in the common case where pkgconfig and internal\nuse the same variable name, in which case it's easier to write dep.get_variable('foo')\ninstead of dep.get_variable(pkgconfig: 'foo', internal: 'foo').\n  \n        \n\n  (since 0.58.0)\n  [optional]\n  \n  \n      \n    \n  \n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        cmake\n        str\n        \n        \nThe CMake variable name\n  \n        \n\n  \n  \n      \n      \n        configtool\n        str\n        \n        \nThe configtool variable name\n  \n        \n\n  \n  \n      \n      \n        default_value\n        str\n        \n        \nThe default value to return when the variable does not exist\n  \n        \n\n  \n  \n      \n      \n        internal\n        str\n        \n        \nThe internal variable name\n  \n        \n\n  (since 0.54.0)\n  \n  \n      \n      \n        pkgconfig\n        str\n        \n        \nThe pkgconfig variable name\n  \n        \n\n  \n  \n      \n      \n        pkgconfig_define\n        \nlist[str]\n        \n        \nSee dep.get_pkgconfig_variable()\n  \n        \n\n  \n  \n      \n      \n        system\n        str\n        \n        \nThe system variable name\n  \n        \n\n  (since 1.6.0)\n  \n  \n      \n    \n  \n"});