fragment_downloaded_cb({"url":"Release-notes-for-0-42-0.html#page-description","fragment":"Creating distribution tarballs can now be made out of projects based\non Mercurial. As before, this remains possible only with the Ninja\nbackend.\nMeson will now check the keyword arguments used when calling any\nfunction and print a warning if any of the keyword arguments is not\nknown. In the future this will become a hard error.\nThe Vala compiler has an alternative syntax, Genie, that uses the\n.gs file extension. Meson now recognises and uses Genie files.\nThe Pkgconfig module object can add arbitrary extra cflags to the Cflags\nvalue in the .pc file, using the \"extra_cflags\" keyword:\nBase options are now accessible via the get_option() function.\nRust targets now take an optional rust_crate_type keyword, allowing\nyou to set the crate type of the resulting artifact. Valid crate types\nare dylib or cdylib for shared libraries, and rlib or\nstaticlib for static libraries. For more, see Rust's linkage\nreference.\nBoth the address- and undefined behavior sanitizers can now be used\nsimultaneously by passing -Db_sanitize=address,undefined to Meson.\nA new experimental module to compile code with many different SIMD\ninstruction sets and selecting the best one at runtime. This module\nis unstable, meaning its API is subject to change in later releases.\nIt might also be removed altogether.\nThe new keyword implib to executable() allows generation of an import\nlibrary for the executable.\nYou can specify build_rpath : '/foo/bar' in build targets and the\ngiven path will get added to the target's rpath in the build tree. It\nis removed during the install step.\nMeson will print a warning when the user tries to add an rpath linker\nflag manually, e.g. via link_args to a target. This is not\nrecommended because having multiple rpath causes them to stomp on each\nother. This warning will become a hard error in some future release.\nVulkan can now be used as native dependency. The dependency module\nwill detect the VULKAN_SDK environment variable or otherwise try to\nreceive the vulkan library and header via pkgconfig or from the\nsystem.\nWith the Ninja backend it is now possible to limit the maximum number of\nconcurrent linker processes. This is usually only needed for projects\nthat have many large link steps that cause the system to run out of\nmemory if they are run in parallel. This limit can be set with the\nnew backend_max_links option.\nBy default Meson adds the current source and build directories to the\nheader search path. On some rare occasions this is not desired. Setting\nthe implicit_include_directories keyword argument to false these\ndirectories are not used.\nMPI is now supported as a dependency. Because dependencies are\nlanguage-specific, you must specify the requested language with the\nlanguage keyword, i.e., dependency('mpi', language='c') will\nrequest the C MPI headers and libraries. See the MPI\ndependency for more information.\nThe install_subdir command\naccepts the new exclude_files and exclude_directories keyword\narguments that allow specified files or directories to be excluded\nfrom the installed subdirectory.\nPreviously Meson had multiple executables such as mesonintrospect\nand mesontest. They are now invokable via the main Meson executable\nlike this:\nThe old commands are still available but they are deprecated\nand will be removed in some future release.\nMeson will automatically obtain dependency information for pcap\nusing the pcap-config tool. It is used like any other dependency:\nMost libraries and applications use the same standard templates for\nglib-mkenums. There is now a new mkenums_simple() convenience method\nthat passes those default templates to glib-mkenums and allows some tweaks\nsuch as optional function decorators or leading underscores.\n"});