fragment_downloaded_cb({"url":"Rewriter.html#page-description","fragment":"Since version 0.50.0, meson has the functionality to perform some\nbasic modification on the meson.build files from the command line.\nThe currently supported operations are:\nThe rewriter has both, a normal command line interface and a \"script\nmode\". The normal CLI is mostly designed for everyday use. The \"script\nmode\", on the other hand, is meant to be used by external programs\n(IDEs, graphical frontends, etc.)\nThe rewriter itself is considered stable, however the user interface\nand the \"script mode\" API might change in the future. These changes\nmay also break backwards comaptibility to older releases.\nWe are also open to suggestions for API improvements.\nAll rewriter functions are accessed via meson rewrite. The meson\nrewriter assumes that it is run inside the project root directory. If\nthis isn't the case, use --sourcedir to specify the actual project\nsource directory.\nThe most common operations will probably be the adding and removing of source\nfiles to a build target. This can be easily done with:\nFor instance, given the following example\nthe source fileB.cpp can be added with:\nAfter executing this command, the new meson.build will look like this:\nIn this case, exe1 could also have been used for the target name.\nThis is possible because the rewriter also searches for assignments\nand unique meson IDs, which can be acquired with introspection. If\nthere are multiple targets with the same name, meson will do nothing\nand print an error message.\nFor more information see the help output of the rewriter target\ncommand.\nIt is also possible to set kwargs of specific functions with the\nrewriter. The general command for setting or removing kwargs is:\nFor instance, setting the project version can be achieved with this command:\nCurrently, only the following function types are supported:\nFor more information see the help output of the rewrite kwargs command.\nNote msys bash may expand / to a path. Passing // will be\nconverted to / by msys bash but in order to keep usage\nshell-agnostic, the rewrite command also allows // as the function\nID such that it will work in both msys bash and other shells.\nFor setting and deleting default options, use the following command:\nRewriting a meson file is not guaranteed to keep the indentation of\nthe modified functions. Additionally, comments inside a modified\nstatement will be removed. Furthermore, all source files will be\nsorted alphabetically.\nFor instance adding e.c to srcs in the following code\nwould result in the following code:\nThe \"script mode\" should be the preferred API for third party\nprograms, since it offers more flexibility and higher API stability.\nThe \"scripts\" are stored in JSON format and executed with meson rewrite command <JSON file or string>.\nThe JSON format is defined as follows:\nEach object in the main array must have a type entry which specifies which\nfunction should be executed.\nCurrently, the following functions are supported:\nThe format for the type target is defined as follows:\nThe keys sources, subdir and target_type are optional.\nThe format for the type target is defined as follows:\nThe format for the type default_options is defined as follows:\nFor operation delete, the values of the options can be anything\n(including null)\nThe rewriter also offers operation info for the types target and\nkwargs. When this operation is used, meson will print a JSON dump to\nstderr, containing all available information to the rewriter about the\nbuild target / function kwargs in question.\nThe output format is currently experimental and may change in the future.\n\nFor build targets:\n\nAdd/Remove source files\nAdd/Remove targets\nModify a select set of kwargs\nPrint some JSON information\n\n\nFor dependencies:\n\nModify a select set of kwargs\n\n\nFor the project function:\n\nModify a select set of kwargs\nModify the default options list\n\n\n\n\nAdd/Remove source files\nAdd/Remove targets\nModify a select set of kwargs\nPrint some JSON information\n\n\nModify a select set of kwargs\n\n\nModify a select set of kwargs\nModify the default options list\n\n\ndependency\ntarget (any build target, the function ID is the target name/ID)\nproject (the function ID must be / since project() can only be called once)\n\n\ntarget\nkwargs\ndefault_options\n\n"});