fragment_downloaded_cb({"url":"Getting-meson.html#page-description","fragment":"Meson is implemented in Python 3, and requires 3.6 or newer. If your\noperating system provides a package manager, you should install it\nwith that. For platforms that don't have a package manager, you need\nto download it from Python's home page. See below for\nplatform-specific Python3 quirks.\nMeson releases can be downloaded from the GitHub release page, and\nyou can run ./meson.py from inside a release or the git repository\nitself without doing anything special.\nOn Windows, if you did not install Python with the installer options\nthat make Python scripts executable, you will have to run python /path/to/meson.py, where python is Python 3.6 or newer.\nThe newest development code can be obtained directly from Git, and\nwe strive to ensure that it will always be working and usable. All\ncommits go through a pull-request process that runs CI and tests\nseveral platforms.\nMeson is available in the Python Package Index and can be installed\nwith sudo pip3 install meson which requires root and will install it\nsystem-wide.\nIf you have downloaded a copy of the Meson sources already, you can\ninstall it with sudo pip3 install path/to/source/root/.\nAlternatively, you can use pip3 install --user meson which will\ninstall it for your user and does not require any special\nprivileges. This will install the package in ~/.local/, so you will\nhave to add ~/.local/bin to your PATH, and sudo meson install\nwill be completely broken since the program will not be available to\nroot. Only use a user copy of Meson if you do not care about\ninstalling projects as root.\nWe provide an MSI installer on the GitHub release page that can be\nused to install both Meson and Ninja at once for Windows. It also\ncontains an embedded copy of Python, so scripts that use the Python\nmodule and do not have any external dependencies\nwill continue to work as expected.\nPlease note that this is a new feature, so bug reports are expected\nand welcome!\nIn the most common case, you will need the Ninja executable for\nusing the ninja backend, which is the default in Meson. This backend\ncan be used on all platforms and with all toolchains, including GCC,\nClang, Visual Studio, MinGW, ICC, ARMCC, etc.\nYou can use the version provided by your package manager if possible,\notherwise download the binary executable from the Ninja project's\nrelease page.\nIf you will only use the Visual Studio backend (--backend=vs) to\ngenerate Visual Studio solutions on Windows or the XCode backend\n(--backend=xcode) to generate XCode projects on macOS, you do not\nneed Ninja.\nWhen installing Python 3, it is highly recommended (but not required)\nthat you select the installer options as follows:\n\n\n\nWith this, you will have python and pip in PATH, and you can\ninstall Meson with pip. You will also be able to directly run meson\nin any shell on Windows instead of having to run py -3 with the full\npath to the meson.py script.\nIf you are using MSYS2 on Windows as your development environment,\nplease make sure that you do not use the msys/python package to\nprovide Python 3. Use either mingw32/mingw-w64-i686-python3 or\nmingw64/mingw-w64-x86_64-python3 depending on which MinGW target you\nare building for.\n"});