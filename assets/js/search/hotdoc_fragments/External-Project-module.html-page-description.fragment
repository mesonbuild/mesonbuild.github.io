fragment_downloaded_cb({"url":"External-Project-module.html#page-description","fragment":"Note: the functionality of this module is governed by Meson's\nrules on mixing build systems.\nThis is an experimental module, API could change.\nThis module allows building code that uses build systems other than Meson. This\nmodule is intended to be used to build Autotools subprojects as fallback if the\ndependency couldn't be found on the system (e.g. too old distro version).\nThe project will be compiled out-of-tree inside Meson's build directory. The\nproject will also be installed inside Meson's build directory using make's\nDESTDIR\nfeature. During project installation step, that DESTDIR will be copied verbatim\ninto the desired location.\nExternal subprojects can use libraries built by Meson (main project, or other\nsubprojects) using pkg-config, thanks to *-uninstalled.pc files generated by\npkg.generate().\nExternal build system requirements:\nKnown limitations:\nAdded 0.56.0\nThis function should be called at the root directory of a project using another\nbuild system. Usually in a meson.build file placed in the top directory of a\nsubproject, but could be also in any subdir.\nIts first positional argument is the name of the configure script to be\nexecuted (e.g. configure or autogen.sh), that file must be in the current\ndirectory and executable.\nKeyword arguments:\nReturns an ExternalProject object\nReturn a dependency object that can be used to build targets against a library\nfrom the external project.\nKeyword arguments:\nMost of the time the project will be built as a subproject, and fetched using\na .wrap file. In that case the simple meson.build file needed to build the\nsubproject can be provided by adding patch_directory=mysubproject line\nin the wrap file, and place the build definition file at\nsubprojects/packagefiles/mysubproject/meson.build.\n\nMust support out-of-tree build. The configure script will be invoked with the\ncurrent workdir inside Meson's build directory and not subproject's top source\ndirectory.\nConfigure script must generate a Makefile in the current workdir.\nConfigure script must take common directories like prefix, libdir, etc, as\ncommand line arguments.\nConfigure script must support common environment variable like CFLAGS, CC, etc.\nCompilation step must detect when a reconfigure is needed, and do it\ntransparently.\n\n\nExecutables from external projects cannot be used uninstalled, because they\nwould need its libraries to be installed in the final location. This is why\nthere is no find_program() method.\nThe configure script must generate a Makefile, other build systems are not\nyet supported.\nWhen cross compiling, if PKG_CONFIG_SYSROOT_DIR is set in environment or\nsys_root in the cross file properties, the external subproject will not be\nable to find dependencies built by meson using pkg-config. The reason is\npkg-config and pkgconf both prepend the sysroot path to -I and -L arguments\nfrom -uninstalled.pc files. This is arguably a bug that could be fixed in\nfuture version of pkg-config/pkgconf.\n\n\n\nconfigure_options: An array of strings to be passed as arguments to the\nconfigure script. Some special tags will be replaced by Meson before passing\nthem to the configure script: @PREFIX@, @LIBDIR@ and @INCLUDEDIR@.\nNote that libdir and includedir paths are relative to prefix in Meson\nbut some configure scripts requires absolute path, in that case they can be\npassed as '--libdir=@PREFIX@/@LIBDIR@'.\n\ncross_configure_options: Extra options appended to configure_options only\nwhen cross compiling. special tag @HOST@ will be replaced by\n'{}-{}-{}'.format(host_machine.cpu_family(), build_machine.system(), host_machine.system().\nIf omitted it defaults to ['--host=@HOST@'].\n\nverbose: If set to true the output of sub-commands ran to configure, build\nand install the project will be printed onto Meson's stdout.\n\nenv : environment variables to set, such as ['NAME1=value1', 'NAME2=value2'],\na dictionary, or an environment() object.\n\n\n\nsubdir path relative to includedir to be added to the header search path.\n\n"});