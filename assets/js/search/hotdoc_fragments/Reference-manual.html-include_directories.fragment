fragment_downloaded_cb({"url":"Reference-manual.html#include_directories","fragment":"include_directories()\nReturns an opaque object which contains the directories (relative to\nthe current directory) given in the positional arguments. The result\ncan then be passed to the include_directories: keyword argument when\nbuilding executables or libraries. You can use the returned object in\nany subdirectory you want, Meson will make the paths work\nautomatically.\nNote that this function call itself does not add the directories into\nthe search path, since there is no global search path. For something\nlike that, see add_project_arguments().\nSee also implicit_include_directories parameter of\nexecutable(), which adds current source and build\ndirectories to include path.\nEach directory given is converted to two include paths: one that is\nrelative to the source root and one relative to the build root.\nFor example, with the following source tree layout in\n/home/user/project.git:\nmeson.build:\ninclude/meson.build:\nsrc/meson.build:\nIf the build tree is /tmp/build-tree, the following include paths\nwill be added to the executable() call: -I/tmp/build-tree/include -I/home/user/project.git/include.\nThis function has one keyword argument is_system which, if set,\nflags the specified directories as system directories. This means that\nthey will be used with the -isystem compiler argument rather than\n-I on compilers that support this flag (in practice everything\nexcept Visual Studio).\n"});