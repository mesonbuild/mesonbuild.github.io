fragment_downloaded_cb({"url":"CMake-module.html#cmake-options-object","fragment":"\ncmake options object\nThis object is returned by the subproject_options() function and\nconsumed by the options kwarg of the subproject function. The\nfollowing methods are supported:\nThe methods set_override_option, set_install,\nappend_compile_args and append_link_args support the optional\ntarget kwarg. If specified, the set options affect the specific\ntarget. The effect of the option is global for the subproject\notherwise.\nIf, for instance, opt_var.set_install(false) is called, no target\nwill be installed regardless of what is set by CMake. However, it is\nstill possible to install specific targets (here foo) by setting the\ntarget kwarg: opt_var.set_install(true, target: 'foo')\nOptions that are not set won't affect the generated subproject. So, if\nfor instance, set_install was not called then the values extracted\nfrom CMake will be used.\n\n\nadd_cmake_defines({'opt1': val1, ...}) add additional CMake commandline defines\n\nset_override_option(opt, val) set specific build options\nfor targets. This will effectively add opt=val to the override_options\narray of the build target\n\n\nset_install(bool) override wether targets should be installed or not\n\nappend_compile_args(lang, arg1, ...) append compile flags for a specific\nlanguage to the targets\n\nappend_link_args(arg1, ...) append linger args to the targets\n\nclear() reset all data in the cmake options object\n\n"});