fragment_downloaded_cb({"url":"Contributing.html#installed","fragment":"installed\nThe installed dict contains a list of dicts, describing which files are expected\nto be installed. Each dict contains the following keys:\nThe file entry contains the relative path (from the install root) to the\nactually installed file.\nThe type entry specifies how the file path should be interpreted based on the\ncurrent platform. The following values are currently supported:\nExcept for the file, python_file and expr types, all paths should be provided without a suffix.\nThe shared_lib and pdb types takes an optional additional\nparameter, version, this is us a string in X.Y.Z format that will\nbe applied to the library. Each version to be tested must have a\nsingle version. The harness will apply this correctly per platform:\nThe python_file, python_lib, and py_implib types have basic support for configuring the string with the @<VAR>@ syntax:\npdb takes an optional language argument. This determines which\ncompiler/linker should generate the pdb file. Because it's possible to\nmix compilers that do and don't generate pdb files (dmd's optlink\ndoesn't). Currently this is only needed when mixing D and C code.\nThis will be applied appropriately per platform. On windows this\nexpects lib.dll and lib-1.dll. on MacOS it expects liblib.dylib\nand liblib.1.dylib. On other Unices it expects liblib.so,\nliblib.so.1, and liblib.so.1.2.3.\nIf the platform key is present, the installed file entry is only\nconsidered if the platform matches. The following values for\nplatform are currently supported:\n\nfile\ntype\n\nplatform (optional)\n\nversion (optional)\n\nlanguage (optional)\n\n\n\n@PYTHON_PLATLIB@: python get_install_dir directory relative to prefix\n\n@PYTHON_PURELIB@: python get_install_dir(pure: true) directory relative to prefix\n\n\n\n\n type\n Description\n\n\n\n\n file\n\n No postprocessing, just use the provided path\n\n\n python_file\n\n Use the provided path while replacing the python directory.\n\n\n dir\n\n To include all files inside the directory (for generated docs, etc). The path must be a valid directory\n\n\n exe\n\n For executables. On Windows the .exe suffix is added to the path in file\n\n\n\n shared_lib\n\n For shared libraries, always written as name. The appropriate suffix and prefix are added by platform\n\n\n python_lib\n\n For python libraries, while replacing the python directory. The appropriate suffix is added by platform\n\n\n pdb\n\n For Windows PDB files. PDB entries are ignored on non Windows platforms\n\n\n implib\n\n For Windows import libraries. These entries are ignored on non Windows platforms\n\n\n py_implib\n\n For Windows import libraries. These entries are ignored on non Windows platforms\n\n\n implibempty\n\n Like implib, but no symbols are exported in the library\n\n\n expr\n\n file is an expression. This type should be avoided and removed if possible\n\n\n\n\n\n\n Argument\n Applies to\n Description\n\n\n\n\n version\n\n shared_lib, pdb\n\n Sets the version to look for appropriately per-platform\n\n\n language\n\n pdb\n\n Determines which compiler/linker determines the existence of this file\n\n\n\n\n\n\n platform\n Description\n\n\n\n\n msvc\n\n Matches when a msvc like compiler is used (msvc, clang-cl, etc.)\n\n\n gcc\n\n Not msvc\n\n\n\n cygwin\n\n Matches when the platform is cygwin\n\n\n !cygwin\n\n Not cygwin\n\n\n\n\n"});