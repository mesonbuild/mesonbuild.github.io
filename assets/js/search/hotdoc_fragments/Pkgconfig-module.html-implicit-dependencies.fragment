fragment_downloaded_cb({"url":"Pkgconfig-module.html#implicit-dependencies","fragment":"Implicit dependencies\nThe exact rules followed to find dependencies that are implicitly\nadded into the pkg-config file have evolved over time. Here are the\nrules as of Meson 0.49.0, previous versions might have slightly\ndifferent behaviour.\n\nNot found libraries or dependencies are ignored.\nLibraries and dependencies are private by default (i.e. added into\nRequires.private: or Libs.private:) unless they are explicitly added in\nlibraries or requires keyword arguments, or is the main library (first\npositional argument).\nLibraries and dependencies will be de-duplicated, if they are added in both\npublic and private (e.g Requires: and Requires.private:) it will be removed\nfrom the private list.\nShared libraries (i.e. shared_library() and NOT library()) add only\n-lfoo into Libs: or Libs.private: but their dependencies are not pulled.\nThis is because dependencies are only needed for static link.\nOther libraries (i.e. static_library() or library()) add -lfoo into Libs:\nor Libs.private: and recursively add their dependencies into Libs.private: or\nRequires.private:.\nDependencies provided by pkg-config are added into Requires: or\nRequires.private:. If a version was specified when declaring that dependency\nit will be written into the generated file too.\nThe threads dependency (i.e. dependency('threads')) adds -pthread into\nLibs: or Libs.private:.\nInternal dependencies (i.e.\ndeclare_dependency(compiler_args : '-DFOO', link_args : '-Wl,something', link_with : foo))\nadd compiler_args into Cflags: if public, link_args and link_with into\nLibs: if public or Libs.private: if private.\nOther dependency types add their compiler arguments into Cflags: if public,\nand linker arguments into Libs: if public or Libs.private: if private.\nOnce a pkg-config file is generated for a library using pkg.generate(mylib),\nany subsequent call to pkg.generate() where mylib appears, will generate a\nRequires: or Requires.private instead of a Libs: or Libs.private:.\n\n"});