fragment_downloaded_cb({"url":"Reference-manual_functions.html#shared_module","fragment":"shared_module()\nBuilds a shared module with the given sources.\nThis is useful for building modules that will be dlopen()ed and\nhence may contain undefined symbols that will be provided by the\nlibrary that is loading it.\nIf you want the shared module to be able to refer to functions and\nvariables defined in the executable() it is loaded by,\nyou will need to set the export_dynamic argument of the executable to\ntrue.\n\nLinking to a shared module is deprecated, and will be an error in the future.\nIt used to be allowed because it was the only way to have a shared-library-like target that\ncontained references to undefined symbols. However, since 0.40.0, the override_options:\nbuild_target() keyword argument can be used to create such a shared_library(), and shared\nmodules have other characteristics that make them incompatible with linking, such as a lack of\nSONAME. Linking to shared modules also does not work on some platforms, such as on macOS / iOS.\n\n"});