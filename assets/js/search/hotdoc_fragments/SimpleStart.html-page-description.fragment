fragment_downloaded_cb({"url":"SimpleStart.html#page-description","fragment":"This page is meant for people who are new to using Meson and possibly\neven to compiling C and/or C++ code in general. It is meant to contain\none simple way of getting your build environment up and running. If\nyou are more experienced and have your own preferred way of installing\nand using development software, feel free to use that instead. This\nguide only deals with Linux, Windows and macOS platforms. If you use\nsome other platform, such as one of the BSDs, you probably already\nknow how to install development tools on it (probably better than we\ndo, even).\nThere are three phases to getting a development environment running.\nAll Linux distributions provide easy access to development tools.\nTypically you need to open a terminal and execute one command, which\ndepends on your distro.\nThe most common development toolchain on Windows is Visual Studio,\nwhich can be downloaded from the Visual Studio web\nsite. Select the Community\nversion unless you have bought a license.\n\nDownload the installer and run it. When you are given a list of things\nto install, select Desktop development with C++. This installs both\na C and a C++ compiler.\n\nOnce the installer finishes the compiler toolchain is ready to use.\nOn macOS the development toolchain must be installed via the Mac app\nstore. Search for an app called XCode and install it.\n\nNote: Installing XCode is not sufficient by itself. You also need to\nstart XCode' GUI application once. This will make XCode download and\ninstall more files that are needed for compilation.\nInstalling Meson is just as simple as installing the compiler toolchain.\nMeson provides a standard Windows .msi installer that can be\ndownloaded from the Releases\npage.\n\nDownload and run it to install all the necessary bits. You can verify\nthat your installation is working by running the Visual Studio\ndeveloper tools command prompt that can be found in the start menu.\n\nYou should be able to run both meson and ninja and query their\nversions.\n\nDue to the way Apple has set things up, getting macOS working is a bit\nmore complicated. The first thing you need to do is to install the\nnewest version of Python 3 from the project's web\nsite.\n\nOnce you have a working Python you can install the necessary bits\nusing Python's Pip package manager.\nThis will install the necessary files in your home directory, but\nsadly they are not directly usable. You need to add the directory they\nare written to in the system's PATH environment variable so the\nprograms can be used directly from the terminal. This requires editing\na text configuration file.\nThe correct file to edit depends on which shell you are currently\nusing. If you have an old macOS install it is probably Bash and the\nfile you need to edit is .bash_profile. If, on the other hand, you\nhave a new macOS install then you are probably using Zsh and the file\nto edit is .zshrc. In either case the file should be in your home\ndirectory.\nFor Bash the line you need to add is this:\nwhereas for Zsh it is this:\nIn both case you need to change the values for username and 3.9.\nThe former needs to be substituted with your Unix username while the\nlatter needs to contain the actual Python version you installed.\nOnce this is done close the terminal application and start it again.\nNow you should be able to run the meson command.\n\nStart a terminal application. On Windows you have to use the Visual\nStudio Developer Tools Command Prompt as discussed above, because the\ncompilers are only available in that terminal. You also need to change\ninto your home directory (Linux and macOS terminals start in the home\ndirectory by default).\nCreate a new directory to hold your project.\nUse Meson to create and build a new sample project.\nThis will create a project skeleton for you and compile it. The result\nis put in the build subdirectory and can be run directly from there.\n\nThe project is now ready for development. You can edit the code with\nany editor and it is rebuilt by going in the build subdirectory and\nexecuting the meson compile command. If your version of Meson is too\nold, you can compile the project by running the command ninja\ninstead.\n\nDebian, Ubuntu and derivatives: sudo apt install build-essential\n\nFedora, Centos, RHEL and derivatives: sudo dnf install gcc-c++\n\nArch: sudo pacman -S gcc\n\n\n\nDebian, Ubuntu and derivatives: sudo apt install meson ninja-build\n\nFedora, Centos, RHEL and derivatives: sudo dnf install meson ninja-build\n\nArch: sudo pacman -S meson\n\n\n"});