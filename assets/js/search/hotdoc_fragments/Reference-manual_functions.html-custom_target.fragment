fragment_downloaded_cb({"url":"Reference-manual_functions.html#custom_target","fragment":"custom_target()\nCreate a custom top level build target. The only positional argument\nis the name of this target and cannot contain path separators (/ or \\).\nThe name of custom target might not be used by every backends, for instance with\nthe Ninja backend, subdir/meson.build containing the example below,\nninja -C builddir foo or ninja -C builddir subdir/foo won't work,\nit is instead ninja -C builddir subdir/file.txt. However, meson compile subdir/foo\nis accepted.\nSince 0.60.0 the name argument is optional and defaults to the basename of the first\noutput (file.txt in the example above).\nThe array of strings passed to the command keyword argument accept\nthe following special string substitutions:\n(since 0.47.0) The depfile keyword argument also accepts the\n@BASENAME@ and @PLAINNAME@ substitutions.\nThe returned object also has methods that are documented in custom_tgt.\n\nAssuming that command: is executed by a POSIX sh shell\nis not portable, notably to Windows. Instead, consider using a\nnative: true executable(), or a python script.\nthe install_mode kwarg ignored integer values between 0.60.0 -- 1.1.0.\n\n\n\n@INPUT@: the full path to the input passed to input. If more than\none input is specified, all of them will be substituted as separate\narguments only if the command uses '@INPUT@' as a\nstandalone-argument. For instance, this would not work: command : ['cp', './@INPUT@'], but this would: command : ['cp', '@INPUT@'].\n\n@OUTPUT@: the full path to the output passed to output. If more\nthan one outputs are specified, the behavior is the same as\n@INPUT@.\n\n@INPUT0@ @INPUT1@ ...: the full path to the input with the specified array index in input\n\n\n@OUTPUT0@ @OUTPUT1@ ...: the full path to the output with the specified array index in output\n\n\n@OUTDIR@: the full path to the directory where the output(s) must be written\n\n@DEPFILE@: the full path to the dependency file passed to depfile\n\n\n@PLAINNAME@: the input filename, without a path\n\n@PLAINNAME0@ @PLAINNAME1@ ... (since 1.5.0): the input filename without a path, with the specified array index in input\n\n\n@BASENAME@: the input filename, with extension removed\n\n@BASENAME0@ @BASENAME1@ ... (since 1.5.0): the input filename with extension removed, with the specified array index in input\n\n\n@PRIVATE_DIR@ (since 0.50.1): path to a directory where the custom target must store all its intermediate files.\n\n@SOURCE_ROOT@: the path to the root of the source tree. Depending on the backend,\nthis may be an absolute or a relative to current workdir path.\n\n@BUILD_ROOT@: the path to the root of the build tree. Depending on the backend,\nthis may be an absolute or a relative to current workdir path.\n\n@CURRENT_SOURCE_DIR@: this is the directory where the currently\nprocessed meson.build is located in.  Depending on the backend,\nthis may be an absolute or a relative to current workdir path.\n\n"});