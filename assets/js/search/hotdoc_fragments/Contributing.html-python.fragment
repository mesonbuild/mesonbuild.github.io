fragment_downloaded_cb({"url":"Contributing.html#python","fragment":"Python\nWe will always support all non EOL versions of CPython. Yes, there are people\nout there using and depending on every old version of python. In fact, there\nare people using and depending on systems that had a brand new python at the\ntime of release, but with a much longer support cycle than Python itself. We\nneed to balance the tradeoff between supporting those systems and being able to\nimprove our own codebase and code quality.\nMeson will also be honest about what versions of python it supports. When a\nversion of CPython becomes EOL, it becomes eligible to be removed from our\nsupport policy. We cannot guarantee continued support forever for software that\nis not supported by its own developers, even if some deprecated LTS systems out\nthere still ship it. However, that doesn't mean we will drop support for those\nversions simply because they are old. If we are not using new functionality\nfrom new python versions, we will continue to mark Meson as compatible with the\nolder version -- and test it in CI!\n(Note that contrary to popular belief, it is actually easier to test support\nfor very old versions of python than it is to drop support for it. We already\nhave the CI setup necessary for testing. Upgrading the CI to use newer versions\nof python, on the other hand, represents mildly painful administrative work\nthat has to be done.)\nSo, in order to start requiring a newer version of python, one should check a\nfew factors:\n\nare the older versions being dropped, already EOL? Python EOL chart\n\ndocument the new minimum version of corresponding OSes\nrationalize the benefit of the change in terms of improvements to development\nand maintenance of Meson. What new language features will be unlocked by the\nupgrade, that Meson will be able to make good use of? Not every version has\nnew features requiring an upgrade, and not every new feature is so great we\nneed to drop everything to use it\n\n"});