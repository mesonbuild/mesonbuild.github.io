fragment_downloaded_cb({"url":"Reference-manual_returned_compiler.html#arguments4","fragment":"Arguments\nThe method compiler.find_library() accepts the following positional arguments:\nThe library to find.\n\nFinally, compiler.find_library()\naccepts the following keyword arguments:\nAdditional directories to search in.\nBy default the library is searched for in the system library directory\n(e.g. /usr/lib). Specifying more directories here, causes Meson to search\nin those directories as well as the system directories.\nIf true, this method will return a disabler on a failed check.\n(since 0.49.0)\ndefault =\n  false\nList of headers that must be found as well.\nThis check is equivalent to checking each header with a\ncompiler.has_header() call.\nWhen used, kwargs that compiler.has_header() would accept can be\npassed here prefixed with header_, and will have the same effect on\nthe header check.\n(since 0.50.0)\nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as args.\n(since 0.51.0)\nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as dependencies.\n(since 0.51.0)\nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as include_directories.\n(since 0.51.0)\nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as no_builtin_args.\n(since 0.51.0)\ndefault =\n  false\nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as prefix.\n(since 0.51.0)\nIf set true, Meson will abort with an error if the library could not\nbe found. Otherwise, Meson will continue and the found method of the\nreturned object will return false.\nWhen set to a feature option, the feature\nwill control if it is searched and whether to fail if not found.\n(since 0.47.0) The value of a feature option can also be passed here.\ndefault =\n  true\nIf true, the search is limited to static libraries only.\nSetting this value to false (the default) will search for both shared\nand static libraries.\n(since 0.51.0)\ndefault =\n  false\n\n\n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        libname\n        str\n        \n        \nThe library to find.\n  \n        \n\n  \n  \n      \n    \n  \n\n    \n      \n        Name\n        Type\n        Description\n        Tags\n      \n    \n    \n      \n        dirs\n        \nlist[str]\n        \n        \nAdditional directories to search in.\nBy default the library is searched for in the system library directory\n(e.g. /usr/lib). Specifying more directories here, causes Meson to search\nin those directories as well as the system directories.\n  \n        \n\n  \n  \n      \n      \n        disabler\n        bool\n        \n        \nIf true, this method will return a disabler on a failed check.\n  \n        \n\n  (since 0.49.0)\n  default =\n  false\n  \n  \n      \n      \n        has_headers\n        \nlist[str]\n        \n        \nList of headers that must be found as well.\nThis check is equivalent to checking each header with a\ncompiler.has_header() call.\nWhen used, kwargs that compiler.has_header() would accept can be\npassed here prefixed with header_, and will have the same effect on\nthe header check.\n  \n        \n\n  (since 0.50.0)\n  \n  \n      \n      \n        header_args\n        \nlist[str]\n        \n        \nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as args.\n  \n        \n\n  (since 0.51.0)\n  \n  \n      \n      \n        header_dependencies\n        \ndep | list[dep]\n        \n        \nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as dependencies.\n  \n        \n\n  (since 0.51.0)\n  \n  \n      \n      \n        header_include_directories\n        \ninc | list[inc]\n        \n        \nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as include_directories.\n  \n        \n\n  (since 0.51.0)\n  \n  \n      \n      \n        header_no_builtin_args\n        bool\n        \n        \nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as no_builtin_args.\n  \n        \n\n  (since 0.51.0)\n  default =\n  false\n  \n  \n      \n      \n        header_prefix\n        str\n        \n        \nWhen the has_headers kwarg is also used, this argument is passed to\ncompiler.has_header() as prefix.\n  \n        \n\n  (since 0.51.0)\n  \n  \n      \n      \n        required\n        \nbool | feature\n\n        \n        \nIf set true, Meson will abort with an error if the library could not\nbe found. Otherwise, Meson will continue and the found method of the\nreturned object will return false.\nWhen set to a feature option, the feature\nwill control if it is searched and whether to fail if not found.\n(since 0.47.0) The value of a feature option can also be passed here.\n  \n        \n\n  default =\n  true\n  \n  \n      \n      \n        static\n        bool\n        \n        \nIf true, the search is limited to static libraries only.\nSetting this value to false (the default) will search for both shared\nand static libraries.\n  \n        \n\n  (since 0.51.0)\n  default =\n  false\n  \n  \n      \n    \n  \n"});