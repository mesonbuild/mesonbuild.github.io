urls_downloaded_cb({"token":"projects","urls":[{"url":"Adding-new-projects-to-wrapdb.html#adding-new-projects-to-wrapdb","node_type":"h1","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB"],"context":{"gi-language":["default"]}},{"url":"Adding-new-projects-to-wrapdb.html#changes-to-original-source","node_type":"p","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB","Changes to original source"],"context":{"gi-language":["default"]}},{"url":"Adding-new-projects-to-wrapdb.html#choosing-the-wrap-name","node_type":"p","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB","Choosing the wrap name"],"context":{"gi-language":["default"]}},{"url":"Additional.html#subpages","node_type":"p","page":"Additional documentation","sections":[],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#compiler-options","node_type":"p","page":"Built-in options","sections":["Built-in options","Compiler options"],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#details-for-backend","node_type":"p","page":"Built-in options","sections":["Built-in options","Universal options","Core options","Details for backend\n"],"context":{"gi-language":["default"]}},{"url":"CMake-module.html#cmake-subprojects","node_type":"p","page":"CMake module","sections":["CMake module","CMake subprojects"],"context":{"gi-language":["default"]}},{"url":"Comparisons.html#comparing-meson-with-other-build-systems","node_type":"p","page":"Comparisons","sections":["Comparing Meson with other build systems"],"context":{"gi-language":["default"]}},{"url":"Comparisons.html#pros3","node_type":"p","page":"Comparisons","sections":["Comparing Meson with other build systems","Bazel","Pros"],"context":{"gi-language":["default"]}},{"url":"Configuring-a-build-directory.html#per-project-subproject-options-rewrite-since-18","node_type":"p","page":"Configuring a build directory","sections":["Configuring a build directory","Per project subproject options rewrite (Since 1.8)"],"context":{"gi-language":["default"]}},{"url":"Continuous-Integration.html#github-actions","node_type":"p","page":"Continuous Integration","sections":["Continuous Integration","GitHub Actions"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#external-dependencies","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Dependency support policy","External dependencies"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#project-tests","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Tests","Project tests"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#python-coding-style","node_type":"ul","page":"Contributing to Meson","sections":["Contributing to Meson","Python Coding style"],"context":{"gi-language":["default"]}},{"url":"Creating-releases.html#creating-releases","node_type":"p","page":"Creating releases","sections":["Creating releases"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#dependencies-that-provide-resource-files","node_type":"p","page":"Dependencies","sections":["Arbitrary variables from dependencies that can be found multiple ways","Dependencies that provide resource files"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#system","node_type":"p","page":"Dependencies","sections":["Dependency detection method","System"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#4-must-have-native-support-for-platforms-that-are-in-common-use","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Can we do better?","4. Must have native support for platforms that are in common use"],"context":{"gi-language":["default"]}},{"url":"Disabler.html#disabling-parts-of-the-build","node_type":"p","page":"Disabling parts of the build","sections":["Disabling parts of the build"],"context":{"gi-language":["default"]}},{"url":"External-Project-module.html#external-project-module","node_type":"ul","page":"External Project module","sections":["External Project module"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#but-i-really-want-a-version-of-meson-that-doesnt-use-python","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","But I really want a version of Meson that doesn't use python!"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#do-you-at-least-support-my-ancient-python-install","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Do you at least support my ancient python install?"],"context":{"gi-language":["default"]}},{"url":"Getting-meson.html#dependencies","node_type":"p","page":"Getting Meson","sections":["Getting Meson","Dependencies"],"context":{"gi-language":["default"]}},{"url":"GuiTutorial.html#upgrading-the-program-to-use-sdl","node_type":"p","page":"Building a simple SDL2 app from scratch","sections":["Upgrading the program to use SDL"],"context":{"gi-language":["default"]}},{"url":"Include-directories.html#include-directories","node_type":"p","page":"Include directories","sections":["Include directories"],"context":{"gi-language":["default"]}},{"url":"IndepthTutorial.html#an-indepth-tutorial","node_type":"p","page":"An in-depth tutorial","sections":["An in-depth tutorial"],"context":{"gi-language":["default"]}},{"url":"Keyval-module.html#keyval-module","node_type":"p","page":"keyval module","sections":["keyval module"],"context":{"gi-language":["default"]}},{"url":"Machine-files.html#binaries","node_type":"p","page":"Cross and Native File reference","sections":["Cross and Native File reference","Sections","Binaries"],"context":{"gi-language":["default"]}},{"url":"Manual.html#subpages","node_type":"p","page":"Manual","sections":[],"context":{"gi-language":["default"]}},{"url":"Mixing-build-systems.html#mesons-policy-on-mixing-multiple-build-systems-in-one-build-directory","node_type":"p","page":"Meson's policy on mixing multiple build systems in one build directory","sections":["Meson's policy on mixing multiple build systems in one build directory"],"context":{"gi-language":["default"]}},{"url":"Mixing-build-systems.html#what-does-this-mean-for-support-and-compatibility","node_type":"ul","page":"Meson's policy on mixing multiple build systems in one build directory","sections":["Meson's policy on mixing multiple build systems in one build directory","What does this mean for support and compatibility?"],"context":{"gi-language":["default"]}},{"url":"Pkgconfig-module.html#pkggenerate","node_type":"ul","page":"Pkgconfig module","sections":["Pkgconfig module","Usage","pkg.generate()"],"context":{"gi-language":["default"]}},{"url":"Project-templates.html#generate-a-build-script-for-an-existing-project","node_type":"p","page":"Project templates","sections":["Generate a build script for an existing project"],"context":{"gi-language":["default"]}},{"url":"Project-templates.html#project-templates","node_type":"p","page":"Project templates","sections":["Project templates"],"context":{"gi-language":["default"]}},{"url":"Quick-guide.html#using-meson-as-a-distro-packager","node_type":"p","page":"Quickstart Guide","sections":["Using Meson","Using Meson as a distro packager"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments41","node_type":"table","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#project_subproject_dir","node_type":"p","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#summary","node_type":"p","page":"Functions","sections":["Functions","summary()"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-38-0.html#default-options-to-subprojects","node_type":"p","page":"Release 0.38","sections":["Default options to subprojects"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-40-0.html#no-download-mode-for-wraps","node_type":"p","page":"Release 0.40","sections":["New features","No download mode for wraps"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-41-0.html#a-target-for-creating-tarballs","node_type":"p","page":"Release 0.41","sections":["New features","A target for creating tarballs"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-42-0.html#distribution-tarballs-from-mercurial-repositories","node_type":"p","page":"Release 0.42","sections":["New features","Distribution tarballs from Mercurial repositories"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-42-0.html#limiting-the-maximum-number-of-linker-processes","node_type":"p","page":"Release 0.42","sections":["New features","Limiting the maximum number of linker processes"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-45-0.html#yielding-subproject-option-to-superproject","node_type":"p","page":"Release 0.45","sections":["New features","Yielding subproject option to superproject"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-46-0.html#generic-python-module","node_type":"p","page":"Release 0.46","sections":["New features","Generic python module"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-46-0.html#improved-generation-of-pkgconfig-files-for-static-only-libraries","node_type":"p","page":"Release 0.46","sections":["New features","Improved generation of pkg-config files for static only libraries."],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-46-0.html#relaxing-of-target-name-requirements","node_type":"p","page":"Release 0.46","sections":["New features","Relaxing of target name requirements"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-48-0.html#projects-args-can-be-set-separately-for-cross-and-native-builds-potentially-breaking-change","node_type":"h2","page":"Release 0.48","sections":["New features","Projects args can be set separately for cross and native builds (potentially breaking change)"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-51-0.html#cmake-subprojects","node_type":"p","page":"Release 0.51.0","sections":["New features","CMake subprojects"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-52-0.html#better-support-for-illumos-and-solaris","node_type":"p","page":"Release 0.52.0","sections":["New features","Better support for illumos and Solaris"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-52-0.html#gettext-targets-are-ignored-if-gettext-is-not-installed","node_type":"p","page":"Release 0.52.0","sections":["New features","Gettext targets are ignored if gettext is not installed"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-52-0.html#improved-support-for-static-libraries","node_type":"p","page":"Release 0.52.0","sections":["New features","Improved support for static libraries"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-52-0.html#projects-args-can-be-set-separately-for-build-and-host-machines-potentially-breaking-change","node_type":"h2","page":"Release 0.52.0","sections":["New features","Projects args can be set separately for build and host machines (potentially breaking change)"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-53-0.html#improved-cmake-subprojects-support","node_type":"p","page":"Release 0.53.0","sections":["New features","Improved CMake subprojects support"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#introduce-dataonly-for-the-pkgconfig-module","node_type":"p","page":"Release 0.54.0","sections":["New features","Introduce dataonly for the pkgconfig module"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#native-file-properties","node_type":"p","page":"Release 0.54.0","sections":["New features","Native file properties"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-56-0.html#added-compcert-c-compiler","node_type":"p","page":"Release 0.56.0","sections":["New features","Added CompCert C compiler"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-56-0.html#external-projects","node_type":"h2","page":"Release 0.56.0","sections":["New features","External projects"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-58-0.html#jni-system-dependency","node_type":"p","page":"Release 0.58.0","sections":["New features","JNI System Dependency"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-59-0.html#new-vs2012-and-vs2013-backend-options","node_type":"p","page":"Release 0.59.0","sections":["New features","New vs2012 and vs2013 backend options"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-59-0.html#support-for-the-wine-resource-compiler","node_type":"p","page":"Release 0.59.0","sections":["New features","Support for the Wine Resource Compiler"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-61-0.html#visual-studio-2022-backend","node_type":"p","page":"Release 0.61.0","sections":["New features","Visual Studio 2022 backend"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#all-directory-options-now-support-paths-outside-of-prefix","node_type":"p","page":"Release 0.62.0","sections":["New features","All directory options now support paths outside of prefix"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-63-0.html#coverage-targets-now-respect-tool-config-files","node_type":"p","page":"Release 0.63.0","sections":["New features","Coverage targets now respect tool config files"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-1-0.html#sudo-meson-install-now-drops-privileges-when-rebuilding-targets","node_type":"p","page":"Release 1.1.0","sections":["New features","\nsudo meson install now drops privileges when rebuilding targets"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-2-0.html#added-metrowerks-cc-toolchains","node_type":"p","page":"Release 1.2.0","sections":["New features","Added Metrowerks C/C++ toolchains"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-2-0.html#new-for-the-generation-of-visual-studio-vcxproj-projects","node_type":"h2","page":"Release 1.2.0","sections":["New features","New for the generation of Visual Studio vcxproj projects"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-3-0.html#c_std-and-cpp_std-options-now-accepts-a-list-of-values","node_type":"p","page":"Release 1.3.0","sections":["New features","\nc_std and cpp_std options now accepts a list of values"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-3-0.html#clarify-implicitlyincluded-headers-in-clike-compiler-checks","node_type":"p","page":"Release 1.3.0","sections":["New features","Clarify implicitly-included headers in C-like compiler checks"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-3-0.html#new-environment-variable-meson_package_cache_dir","node_type":"p","page":"Release 1.3.0","sections":["New features","New environment variable MESON_PACKAGE_CACHE_DIR\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-6-0.html#default-to-printing-deprecations-when-no-minimum-version-is-specified","node_type":"p","page":"Release 1.6.0","sections":["New features","Default to printing deprecations when no minimum version is specified."],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-6-0.html#dependencies-from-cmake-subprojects-now-use-only-public-link-flags","node_type":"p","page":"Release 1.6.0","sections":["New features","Dependencies from CMake subprojects now use only PUBLIC link flags"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-7-0.html#meson-can-run-clippy-on-rust-projects","node_type":"h2","page":"Release 1.7.0","sections":["New features","Meson can run \"clippy\" on Rust projects"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-8-0.html#meson-can-run-rustdoc-on-rust-projects","node_type":"h2","page":"Release 1.8.0","sections":["New features","Meson can run \"rustdoc\" on Rust projects"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-8-0.html#new-argument-android_exe_type-for-executables","node_type":"p","page":"Release 1.8.0","sections":["New features","New argument android_exe_type for executables"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-8-0.html#the-wayland-module-is-stable","node_type":"p","page":"Release 1.8.0","sections":["New features","The Wayland module is stable"],"context":{"gi-language":["default"]}},{"url":"Release-procedure.html#bugfix-releases","node_type":"ul","page":"Release procedure","sections":["Bugfix releases"],"context":{"gi-language":["default"]}},{"url":"Release-procedure.html#requesting-a-bug-fix-release","node_type":"ul","page":"Release procedure","sections":["Requesting a bug fix release"],"context":{"gi-language":["default"]}},{"url":"Shipping-prebuilt-binaries-as-wraps.html#shipping-prebuilt-binaries-as-wraps","node_type":"p","page":"Shipping prebuilt binaries as wraps","sections":["Shipping prebuilt binaries as wraps"],"context":{"gi-language":["default"]}},{"url":"Style-guide.html#naming-options","node_type":"p","page":"Style recommendations","sections":["Style recommendations","Naming options"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#subprojects","node_type":"p","page":"Subprojects","sections":["Subprojects"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#why-must-all-subprojects-be-inside-a-single-directory","node_type":"p","page":"Subprojects","sections":["Subprojects","Why must all subprojects be inside a single directory?"],"context":{"gi-language":["default"]}},{"url":"Unit-tests.html#run-subsets-of-tests","node_type":"p","page":"Unit tests","sections":["Unit tests","Testing tool","Run subsets of tests"],"context":{"gi-language":["default"]}},{"url":"Use-of-Python.html#cross-platform-tooling","node_type":"p","page":"Use of Python","sections":["Dependency hell","Cross platform tooling"],"context":{"gi-language":["default"]}},{"url":"Users.html#enlightenment","node_type":"ul","page":"Users","sections":["Notable projects and organizations using Meson","Enlightenment"],"context":{"gi-language":["default"]}},{"url":"Users.html#notable-projects-and-organizations-using-meson","node_type":"h1","page":"Users","sections":["Notable projects and organizations using Meson"],"context":{"gi-language":["default"]}},{"url":"Users.html#other-notable-projects","node_type":"h2","page":"Users","sections":["Notable projects and organizations using Meson","Other Notable projects"],"context":{"gi-language":["default"]}},{"url":"Using-multiple-build-directories.html#using-multiple-build-directories","node_type":"p","page":"Using multiple build directories","sections":["Using multiple build directories"],"context":{"gi-language":["default"]}},{"url":"Using-the-WrapDB.html#using-the-wrapdb","node_type":"p","page":"Using the WrapDB","sections":["Using the WrapDB"],"context":{"gi-language":["default"]}},{"url":"Using-with-Visual-Studio.html#using-with-visual-studio","node_type":"p","page":"Using with Visual Studio","sections":["Using with Visual Studio"],"context":{"gi-language":["default"]}},{"url":"Using-wraptool.html#installing-dependencies","node_type":"p","page":"Using wraptool","sections":["Using wraptool","Installing dependencies"],"context":{"gi-language":["default"]}},{"url":"Vala.html#gobject-introspection-and-language-bindings","node_type":"p","page":"Vala","sections":["Compiling Vala applications and libraries","Building libraries","GObject Introspection and language bindings"],"context":{"gi-language":["default"]}},{"url":"Vs-External.html#visual-studios-external-build-projects","node_type":"h1","page":"Visual Studio's external build projects","sections":["Visual Studio's external build projects"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#do-not-put-configh-in-external-search-path","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Do not put config.h in external search path"],"context":{"gi-language":["default"]}},{"url":"Wrap-dependency-system-manual.html#provide-section","node_type":"p","page":"Wrap dependency system manual","sections":["Wrap dependency system manual","\nprovide section"],"context":{"gi-language":["default"]}},{"url":"Wrap-dependency-system-manual.html#specific-to-wrapfile","node_type":"p","page":"Wrap dependency system manual","sections":["Wrap dependency system manual","Accepted configuration properties for wraps","Specific to wrap-file"],"context":{"gi-language":["default"]}},{"url":"Wrap-dependency-system-manual.html#subpages","node_type":"p","page":"Wrap dependency system manual","sections":[],"context":{"gi-language":["default"]}},{"url":"Wrap-dependency-system-manual.html#using-wrapped-projects","node_type":"h2","page":"Wrap dependency system manual","sections":["Wrap dependency system manual","Using wrapped projects"],"context":{"gi-language":["default"]}},{"url":"Wrap-dependency-system-manual.html#wrapfile-with-meson-build-patch","node_type":"p","page":"Wrap dependency system manual","sections":["Wrap dependency system manual","wrap-file with Meson build patch"],"context":{"gi-language":["default"]}},{"url":"Wrapdb-projects.html#meson-wrapdb-packages","node_type":"p","page":"Meson WrapDB packages","sections":["Meson WrapDB packages"],"context":{"gi-language":["default"]}},{"url":"howtox.html#add-some-optimization-to-debug-builds","node_type":"p","page":"How do I do X in Meson?","sections":["How do I do X in Meson?","Add some optimization to debug builds"],"context":{"gi-language":["default"]}},{"url":"index.html#projects-using-meson","node_type":"h3","page":"The Meson Build system","sections":["The Meson Build system","Community","Projects using Meson"],"context":{"gi-language":["default"]}}]});