urls_downloaded_cb({"token":"building","urls":[{"url":"Build-targets.html#object-files","node_type":"p","page":"Build targets","sections":["Build targets","Object files"],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#specifying-options-per-subproject","node_type":"p","page":"Built-in options","sections":["Built-in options","Specifying options per subproject"],"context":{"gi-language":["default"]}},{"url":"Commands.html#devenv","node_type":"ul","page":"Command-line commands","sections":["Command-line commands","devenv"],"context":{"gi-language":["default"]}},{"url":"Configuration.html#a-full-example","node_type":"p","page":"Configuration","sections":["A full example"],"context":{"gi-language":["default"]}},{"url":"Configuring-a-build-directory.html#per-project-subproject-options-rewrite-since-18","node_type":"p","page":"Configuring a build directory","sections":["Configuring a build directory","Per project subproject options rewrite (Since 1.8)"],"context":{"gi-language":["default"]}},{"url":"Continuous-Integration.html#github-actions","node_type":"p","page":"Continuous Integration","sections":["Continuous Integration","GitHub Actions"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#project-tests","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Tests","Project tests"],"context":{"gi-language":["default"]}},{"url":"Creating-Linux-binaries.html#building-and-installing","node_type":"h2","page":"Creating Linux binaries","sections":["Creating Linux binaries","Building and installing"],"context":{"gi-language":["default"]}},{"url":"Creating-OSX-packages.html#creating-osx-packages","node_type":"p","page":"Creating OSX packages","sections":["Creating OSX packages"],"context":{"gi-language":["default"]}},{"url":"Cross-compilation.html#cross-compilation","node_type":"p","page":"Cross compilation","sections":["Cross compilation"],"context":{"gi-language":["default"]}},{"url":"Cuda-module.html#unstable-cuda-module","node_type":"p","page":"Unstable CUDA Module","sections":["Unstable CUDA Module"],"context":{"gi-language":["default"]}},{"url":"D.html#compiling-d-libraries-and-installing-them","node_type":"p","page":"D","sections":["Compiling D libraries and installing them"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#building-dependencies-as-subprojects","node_type":"h1","page":"Dependencies","sections":["Building dependencies as subprojects"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#can-we-do-better","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Can we do better?"],"context":{"gi-language":["default"]}},{"url":"External-Project-module.html#add_project","node_type":"p","page":"External Project module","sections":["External Project module","Functions","add_project()"],"context":{"gi-language":["default"]}},{"url":"External-Project-module.html#external-project-module","node_type":"p","page":"External Project module","sections":["External Project module"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#does-wrap-download-sources-behind-my-back","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Does wrap download sources behind my back?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-does-building-my-project-with-msvc-output-static-libraries-called-libfooa","node_type":"h2","page":"FAQ","sections":["Meson Frequently Asked Questions","Why does building my project with MSVC output static libraries called libfoo.a?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-doesnt-meson-have-user-defined-functionsmacros","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why doesn't meson have user defined functions/macros?"],"context":{"gi-language":["default"]}},{"url":"Getting-meson.html#msys2-python3-quirks","node_type":"p","page":"Getting Meson","sections":["Platform-specific install quirks","MSYS2 Python3 quirks"],"context":{"gi-language":["default"]}},{"url":"Gnome-module.html#gnome-module","node_type":"p","page":"GNOME module","sections":["GNOME module"],"context":{"gi-language":["default"]}},{"url":"Gnome-module.html#gnomecompile_resources","node_type":"ul","page":"GNOME module","sections":["GNOME module","Usage","gnome.compile_resources()"],"context":{"gi-language":["default"]}},{"url":"Gnome-module.html#gnomegenerate_vapi","node_type":"p","page":"GNOME module","sections":["GNOME module","Usage","gnome.generate_vapi()"],"context":{"gi-language":["default"]}},{"url":"GuiTutorial.html#building-a-simple-sdl2-app-from-scratch","node_type":"h1","page":"Building a simple SDL2 app from scratch","sections":["Building a simple SDL2 app from scratch"],"context":{"gi-language":["default"]}},{"url":"GuiTutorial.html#upgrading-the-program-to-use-sdl","node_type":"p","page":"Building a simple SDL2 app from scratch","sections":["Upgrading the program to use SDL"],"context":{"gi-language":["default"]}},{"url":"Installing.html#destdir-support","node_type":"p","page":"Installing","sections":["Installing","DESTDIR support"],"context":{"gi-language":["default"]}},{"url":"Installing.html#installing-as-the-superuser","node_type":"p","page":"Installing","sections":["Installing","Installing as the superuser"],"context":{"gi-language":["default"]}},{"url":"Manual.html#subpages","node_type":"p","page":"Manual","sections":[],"context":{"gi-language":["default"]}},{"url":"Mixing-build-systems.html#the-definition-of-build-system-mixing","node_type":"p","page":"Meson's policy on mixing multiple build systems in one build directory","sections":["Meson's policy on mixing multiple build systems in one build directory","The definition of \"build system mixing\""],"context":{"gi-language":["default"]}},{"url":"Overview.html#terminology","node_type":"p","page":"Overview","sections":["Overview","Terminology"],"context":{"gi-language":["default"]}},{"url":"Pkgconfig-module.html#pkggenerate","node_type":"p","page":"Pkgconfig module","sections":["Pkgconfig module","Usage","pkg.generate()"],"context":{"gi-language":["default"]}},{"url":"Porting-from-autotools.html#cleanfiles-extra_dist-etc","node_type":"p","page":"Porting from Autotools","sections":["Porting from Autotools","Makefile.am","*CLEANFILES, EXTRA_DIST, etc."],"context":{"gi-language":["default"]}},{"url":"Python-module.html#python-module","node_type":"p","page":"Python module","sections":["Python module"],"context":{"gi-language":["default"]}},{"url":"Qt6-module.html#qml_module","node_type":"p","page":"Qt6 module","sections":["Qt6 module","qml_module"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments22","node_type":"table","page":"Functions","sections":["Functions","find_program()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments40","node_type":"table","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments54","node_type":"table","page":"Functions","sections":["Functions","vcs_tag()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#find_program_native","node_type":"p","page":"Functions","sections":["Functions","find_program()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#include_directories","node_type":"p","page":"Functions","sections":["Functions","include_directories()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#project_default_options","node_type":"p","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#shared_module","node_type":"p","page":"Functions","sections":["Functions","shared_module()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#vcs_tag_fallback","node_type":"p","page":"Functions","sections":["Functions","vcs_tag()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-37-0.html#llvm-ir-compilation","node_type":"p","page":"Release 0.37","sections":["New features","LLVM IR compilation"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-38-0.html#python-3-module-support","node_type":"p","page":"Release 0.38","sections":["Python 3 module support"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-41-0.html#support-for-passing-arguments-to-rust-compiler","node_type":"p","page":"Release 0.41","sections":["New features","Support for passing arguments to Rust compiler"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-45-0.html#rust-compilerprivate-library-disambiguation","node_type":"p","page":"Release 0.45","sections":["New features","Rust compiler-private library disambiguation"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-46-0.html#building-both-shared-and-static-libraries","node_type":"h2","page":"Release 0.46","sections":["New features","Building both shared and static libraries"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#arm-compilerversion-6-for-c-and-cpp","node_type":"p","page":"Release 0.47","sections":["New features","ARM compiler(version 6) for C and CPP"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#new-base-build-option-for-llvm-apple-bitcode-support","node_type":"p","page":"Release 0.47","sections":["New features","New base build option for LLVM (Apple) bitcode support"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-48-0.html#projects-args-can-be-set-separately-for-cross-and-native-builds-potentially-breaking-change","node_type":"p","page":"Release 0.48","sections":["New features","Projects args can be set separately for cross and native builds (potentially breaking change)"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-51-0.html#new-sourceset-module","node_type":"p","page":"Release 0.51.0","sections":["New features","New sourceset module"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-51-0.html#sanity-checking-compilers-with-user-flags","node_type":"p","page":"Release 0.51.0","sections":["New features","Sanity checking compilers with user flags"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#per-subproject-default_library-and-werror-options","node_type":"p","page":"Release 0.54.0","sections":["New features","Per subproject default_library and werror options"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-55-0.html#added-ability-to-specify-targets-in-meson-compile","node_type":"p","page":"Release 0.55.0","sections":["New features","Added ability to specify targets in meson compile\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-58-0.html#developer-environment","node_type":"ul","page":"Release 0.58.0","sections":["New features","Developer environment"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-58-0.html#jni-system-dependency","node_type":"p","page":"Release 0.58.0","sections":["New features","JNI System Dependency"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#experimental-command-to-convert-environments-to-cross-files","node_type":"p","page":"Release 0.62.0","sections":["New features","Experimental command to convert environments to cross files"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-2-0.html#added-a-new-genvslite-option-for-use-with-meson-setup-","node_type":"p","page":"Release 1.2.0","sections":["New features","Added a new '--genvslite' option for use with 'meson setup ...'"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-6-0.html#dependencies-from-cmake-subprojects-now-use-only-public-link-flags","node_type":"p","page":"Release 1.6.0","sections":["New features","Dependencies from CMake subprojects now use only PUBLIC link flags"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-7-0.html#test-targets-no-longer-built-by-default","node_type":"p","page":"Release 1.7.0","sections":["New features","Test targets no longer built by default"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-9-0.html#support-for-masm-in-visual-studio-backends","node_type":"p","page":"Release 1.9.0","sections":["New features","Support for MASM in Visual Studio backends"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#building-directly-with-ninja","node_type":"h3","page":"Running Meson","sections":["Running Meson","Building from the source","Building directly with ninja"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#building-from-the-source","node_type":"h2","page":"Running Meson","sections":["Running Meson","Building from the source"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#configuring-the-build-directory","node_type":"p","page":"Running Meson","sections":["Running Meson","Configuring the build directory"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#installing","node_type":"p","page":"Running Meson","sections":["Running Meson","Installing"],"context":{"gi-language":["default"]}},{"url":"SourceSet-module.html#source-set-module","node_type":"p","page":"Source set module","sections":["Source set module"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#toggling-between-system-libraries-and-embedded-sources","node_type":"p","page":"Subprojects","sections":["Subprojects","Using a subproject","Toggling between system libraries and embedded sources"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#stability-promises","node_type":"p","page":"Syntax","sections":["Syntax","Stability Promises"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#string-path-building","node_type":"h3","page":"Syntax","sections":["Syntax","Strings","String path building"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#syntax","node_type":"p","page":"Syntax","sections":["Syntax"],"context":{"gi-language":["default"]}},{"url":"Unity-builds.html#unity-builds","node_type":"p","page":"Unity builds","sections":["Unity builds"],"context":{"gi-language":["default"]}},{"url":"Using-multiple-build-directories.html#using-multiple-build-directories","node_type":"p","page":"Using multiple build directories","sections":["Using multiple build directories"],"context":{"gi-language":["default"]}},{"url":"Vala.html#building-libraries","node_type":"h2","page":"Vala","sections":["Compiling Vala applications and libraries","Building libraries"],"context":{"gi-language":["default"]}},{"url":"Vs-External.html#creating-and-compiling","node_type":"p","page":"Visual Studio's external build projects","sections":["Visual Studio's external build projects","Creating and compiling"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#avoid-exposing-compilable-source-files-in-declare_dependency","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Avoid exposing compilable source files in declare_dependency"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#declare-generated-headers-explicitly","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Declare generated headers explicitly"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#make-libraries-buildable-both-as-static-and-shared","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Make libraries buildable both as static and shared"],"context":{"gi-language":["default"]}},{"url":"howtox.html#set-compiler","node_type":"p","page":"How do I do X in Meson?","sections":["How do I do X in Meson?","Set compiler"],"context":{"gi-language":["default"]}},{"url":"howtox.html#set-extra-compiler-and-linker-flags-from-the-outside-when-eg-building-distro-packages","node_type":"h2","page":"How do I do X in Meson?","sections":["How do I do X in Meson?","Set extra compiler and linker flags from the outside (when e.g. building distro packages)"],"context":{"gi-language":["default"]}}]});