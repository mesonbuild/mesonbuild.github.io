urls_downloaded_cb({"token":"disable","urls":[{"url":"Build-options.html#features","node_type":"p","page":"Build options","sections":["Build options","Build option types","Features"],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#base-options","node_type":"table","page":"Built-in options","sections":["Built-in options","Base options"],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#compiler-options","node_type":"p","page":"Built-in options","sections":["Built-in options","Compiler options"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#skipping-integration-tests","node_type":"ul","page":"Contributing to Meson","sections":["Contributing to Meson","Tests","Skipping integration tests"],"context":{"gi-language":["default"]}},{"url":"Disabler.html#disabling-parts-of-the-build","node_type":"p","page":"Disabling parts of the build","sections":["Disabling parts of the build"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#does-wrap-download-sources-behind-my-back","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Does wrap download sources behind my back?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#how-do-i-disable-exceptions-and-rtti-in-my-c-project","node_type":"h2","page":"FAQ","sections":["Meson Frequently Asked Questions","How do I disable exceptions and RTTI in my C++ project?"],"context":{"gi-language":["default"]}},{"url":"Gnome-module.html#gnomegenerate_gir","node_type":"ul","page":"GNOME module","sections":["GNOME module","Usage","gnome.generate_gir()"],"context":{"gi-language":["default"]}},{"url":"Precompiled-headers.html#using-precompiled-headers-with-gcc-and-derivatives","node_type":"p","page":"Precompiled headers","sections":["Precompiled headers","Using precompiled headers with GCC and derivatives"],"context":{"gi-language":["default"]}},{"url":"Python-module.html#install_sources","node_type":"ul","page":"Python module","sections":["Python module","\npython_installation object","Methods","install_sources()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments28","node_type":"table","page":"Functions","sections":["Functions","install_data()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments30","node_type":"table","page":"Functions","sections":["Functions","install_headers()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#install_data_preserve_path","node_type":"p","page":"Functions","sections":["Functions","install_data()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#install_headers_preserve_path","node_type":"p","page":"Functions","sections":["Functions","install_headers()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#test","node_type":"p","page":"Functions","sections":["Functions","test()"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-42-0.html#disable-implicit-include-directories","node_type":"h2","page":"Release 0.42","sections":["New features","Disable implicit include directories"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#new-base-build-option-for-llvm-apple-bitcode-support","node_type":"p","page":"Release 0.47","sections":["New features","New base build option for LLVM (Apple) bitcode support"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#new-builtin-option-install_umask-with-a-default-value-022","node_type":"p","page":"Release 0.47","sections":["New features","New built-in option install_umask with a default value 022"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-50-0.html#new-kwarg-install-for-configure_file","node_type":"p","page":"Release 0.50.0","sections":["New features","New kwarg install: for configure_file()\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-53-0.html#added-global-option-to-disable-c-rtti","node_type":"h2","page":"Release 0.53.0","sections":["New features","Added global option to disable C++ RTTI"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#introduce-dataonly-for-the-pkgconfig-module","node_type":"p","page":"Release 0.54.0","sections":["New features","Introduce dataonly for the pkgconfig module"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#msvcclangcl-argument-changescleanup","node_type":"ul","page":"Release 0.57.0","sections":["New features","MSVC/Clang-Cl Argument Changes/Cleanup"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#test-timeout-and-timeout_multiplier-value-0","node_type":"p","page":"Release 0.57.0","sections":["New features","\ntest() timeout and timeout_multiplier value <= 0"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-1-0.html#redirect-introspection-outputs-to-stderr","node_type":"p","page":"Release 1.1.0","sections":["New features","Redirect introspection outputs to stderr"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-9-0.html#toplevel-statement-handling-in-swift-libraries","node_type":"p","page":"Release 1.9.0","sections":["New features","Top-level statement handling in Swift libraries"],"context":{"gi-language":["default"]}},{"url":"SourceSet-module.html#add","node_type":"p","page":"Source set module","sections":["Source set module","\nsource_set object","Methods","add()"],"context":{"gi-language":["default"]}},{"url":"Unit-tests.html#other-test-options","node_type":"p","page":"Unit tests","sections":["Unit tests","Testing tool","Other test options"],"context":{"gi-language":["default"]}},{"url":"Yaml-RefMan.html#reference-manual","node_type":"p","page":"YAML Reference manual","sections":["Reference Manual"],"context":{"gi-language":["default"]}}]});