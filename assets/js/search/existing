urls_downloaded_cb({"token":"existing","urls":[{"url":"Adding-new-projects-to-wrapdb.html#creating-the-wrap-contents","node_type":"p","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB","How to contribute a new wrap","Creating the wrap contents"],"context":{"gi-language":["default"]}},{"url":"Build-targets.html#object-files","node_type":"p","page":"Build targets","sections":["Build targets","Object files"],"context":{"gi-language":["default"]}},{"url":"CMake-module.html#cross-compilation","node_type":"p","page":"CMake module","sections":["CMake module","CMake subprojects","Cross compilation"],"context":{"gi-language":["default"]}},{"url":"Comparisons.html#pros","node_type":"p","page":"Comparisons","sections":["Comparing Meson with other build systems","GNU Autotools","Pros"],"context":{"gi-language":["default"]}},{"url":"Configuring-a-build-directory.html#per-project-subproject-options-rewrite-since-18","node_type":"p","page":"Configuring a build directory","sections":["Configuring a build directory","Per project subproject options rewrite (Since 1.8)"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#acceptance-and-merging","node_type":"ul","page":"Contributing to Meson","sections":["Contributing to Meson","Acceptance and merging"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#cmake","node_type":"p","page":"Dependencies","sections":["Dependency detection method","CMake"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#overview-of-the-solution","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Overview of the solution"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#i-have-proprietary-compiler-toolchain-x-that-does-not-work-with-meson-how-can-i-make-it-work","node_type":"ul","page":"FAQ","sections":["Meson Frequently Asked Questions","I have proprietary compiler toolchain X that does not work with Meson, how can I make it work?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-are-changes-to-default-project-options-ignored","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why are changes to default project options ignored?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-is-meson-implemented-in-python-rather-than-programming-language-x","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why is Meson implemented in Python rather than [programming language X]?"],"context":{"gi-language":["default"]}},{"url":"Fs-module.html#fs-filesystem-module","node_type":"p","page":"FS (filesystem) module","sections":["FS (filesystem) module"],"context":{"gi-language":["default"]}},{"url":"IDE-integration.html#existing-integrations","node_type":"h1","page":"IDE integration","sections":["Existing integrations"],"context":{"gi-language":["default"]}},{"url":"Machine-files.html#supported-properties","node_type":"ul","page":"Cross and Native File reference","sections":["Cross and Native File reference","Sections","Properties","Supported properties"],"context":{"gi-language":["default"]}},{"url":"Project-templates.html#generate-a-build-script-for-an-existing-project","node_type":"h1","page":"Project templates","sections":["Generate a build script for an existing project"],"context":{"gi-language":["default"]}},{"url":"Qt6-module.html#qml_module","node_type":"ul","page":"Qt6 module","sections":["Qt6 module","qml_module"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments40","node_type":"table","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#project_subproject_dir","node_type":"p","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_returned_file.html#file-file","node_type":"p","page":"File","sections":["File (file)"],"context":{"gi-language":["default"]}},{"url":"Reference-tables.html#compiler-and-linker-selection-variables","node_type":"p","page":"Reference tables","sections":["Reference tables","Compiler and Linker selection variables"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#new-action-copy-for-configure_file","node_type":"p","page":"Release 0.47","sections":["New features","New action copy: for configure_file()\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#new-compiler-check-check_header","node_type":"p","page":"Release 0.47","sections":["New features","New compiler check: check_header()\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-50-0.html#added-cmake_module_path-and-cmake_args-to-dependency","node_type":"p","page":"Release 0.50.0","sections":["New features","Added cmake_module_path and cmake_args to dependency"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-52-0.html#added-include_type-kwarg-to-dependency","node_type":"p","page":"Release 0.52.0","sections":["New features","Added include_type kwarg to dependency\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-52-0.html#enhancements-to-the-source_set-module","node_type":"p","page":"Release 0.52.0","sections":["New features","Enhancements to the source_set module"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#native-build-machine-compilers-not-always-required","node_type":"p","page":"Release 0.54.0","sections":["New features","Native (build machine) compilers not always required"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-56-0.html#cmake-subproject-cross-compilation-support","node_type":"p","page":"Release 0.56.0","sections":["New features","CMake subproject cross compilation support"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-58-0.html#mesonadd_dist_script-allowed-in-subprojects","node_type":"p","page":"Release 0.58.0","sections":["New features","\nmeson.add_dist_script() allowed in subprojects"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-59-0.html#new-vs2012-and-vs2013-backend-options","node_type":"p","page":"Release 0.59.0","sections":["New features","New vs2012 and vs2013 backend options"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#added-support-for-texas-instruments-msp430-and-arm-compilers","node_type":"p","page":"Release 0.62.0","sections":["New features","Added support for Texas Instruments MSP430 and ARM compilers"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#new-option-to-choose-python-installation-environment","node_type":"ul","page":"Release 0.62.0","sections":["New features","New option to choose python installation environment"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#support-for-arm-ltd-clang-toolchain","node_type":"p","page":"Release 0.62.0","sections":["New features","Support for ARM Ltd. Clang toolchain"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-63-0.html#msvc-now-sets-the-__cplusplus-define-accurately","node_type":"p","page":"Release 0.63.0","sections":["New features","MSVC now sets the __cplusplus #define accurately"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-2-0.html#wildcards-in-list-of-tests-to-run","node_type":"p","page":"Release 1.2.0","sections":["New features","Wildcards in list of tests to run"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-4-0.html#new-unset-method-on-environment-objects","node_type":"p","page":"Release 1.4.0","sections":["New features","New unset() method on environment objects"],"context":{"gi-language":["default"]}},{"url":"Release-procedure.html#bugfix-releases","node_type":"ul","page":"Release procedure","sections":["Bugfix releases"],"context":{"gi-language":["default"]}},{"url":"Rust-module.html#doctest","node_type":"p","page":"Rust module","sections":["Rust module","Functions","doctest()"],"context":{"gi-language":["default"]}},{"url":"Rust-module.html#test","node_type":"p","page":"Rust module","sections":["Rust module","Functions","test()"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#stability-promises","node_type":"p","page":"Syntax","sections":["Syntax","Stability Promises"],"context":{"gi-language":["default"]}},{"url":"Vala.html#adding-to-valas-search-path","node_type":"p","page":"Vala","sections":["Compiling Vala applications and libraries","Using libraries","Adding to Vala's search path"],"context":{"gi-language":["default"]}},{"url":"Vs-External.html#adding-sources-to-the-project","node_type":"p","page":"Visual Studio's external build projects","sections":["Visual Studio's external build projects","Adding sources to the project"],"context":{"gi-language":["default"]}},{"url":"howtox.html#use-existing-findnamecmake-files","node_type":"h2","page":"How do I do X in Meson?","sections":["How do I do X in Meson?","Use existing Find<name>.cmake files"],"context":{"gi-language":["default"]}},{"url":"index.html#projects-using-meson","node_type":"p","page":"The Meson Build system","sections":["The Meson Build system","Community","Projects using Meson"],"context":{"gi-language":["default"]}}]});