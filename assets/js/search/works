urls_downloaded_cb({"token":"works","urls":[{"url":"Adding-new-projects-to-wrapdb.html#creating-the-wrap-contents","node_type":"p","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB","How to contribute a new wrap","Creating the wrap contents"],"context":{"gi-language":["default"]}},{"url":"Adding-new-projects-to-wrapdb.html#how-it-works","node_type":"h2","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB","How it works"],"context":{"gi-language":["default"]}},{"url":"Build-system-converters.html#build-system-converters","node_type":"p","page":"Build system converters","sections":["Build system converters"],"context":{"gi-language":["default"]}},{"url":"Codegen-module.html#yaccgenerate","node_type":"ul","page":"Codegen Module","sections":["Codegen Module","Returned Objects","YaccGenerator","yacc.generate"],"context":{"gi-language":["default"]}},{"url":"Compiler-properties.html#compile-and-run-test-application","node_type":"p","page":"Compiler properties","sections":["Compiler properties","Compile and run test application"],"context":{"gi-language":["default"]}},{"url":"Compiler-properties.html#does-code-compile","node_type":"p","page":"Compiler properties","sections":["Compiler properties","Does code compile?"],"context":{"gi-language":["default"]}},{"url":"Creating-releases.html#creating-releases","node_type":"p","page":"Creating releases","sections":["Creating releases"],"context":{"gi-language":["default"]}},{"url":"Custom-build-targets.html#custom-build-targets","node_type":"p","page":"Custom build targets","sections":["Custom build targets"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#arbitrary-variables-from-dependencies-that-can-be-found-multiple-ways","node_type":"p","page":"Dependencies","sections":["Arbitrary variables from dependencies that can be found multiple ways"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#dependencies","node_type":"p","page":"Dependencies","sections":["Dependencies"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#dependencies-that-provide-resource-files","node_type":"p","page":"Dependencies","sections":["Arbitrary variables from dependencies that can be found multiple ways","Dependencies that provide resource files"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#qt","node_type":"p","page":"Dependencies","sections":["Dependencies with custom lookup functionality","Qt"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#sample-code","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Sample code"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#this-is-the-original-design-rationale-for-meson-the-syntax-it-describes-does-not-match-the-released-version","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version"],"context":{"gi-language":["default"]}},{"url":"Disabler.html#disabling-parts-of-the-build","node_type":"p","page":"Disabling parts of the build","sections":["Disabling parts of the build"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#how-to-add-preprocessor-defines-to-a-target","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","How to add preprocessor defines to a target?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#my-project-works-fine-on-linux-and-mingw-but-fails-to-link-with-msvc-due-to-a-missing-lib-file-fatal-error-lnk1181-why","node_type":"h2","page":"FAQ","sections":["Meson Frequently Asked Questions","My project works fine on Linux and MinGW but fails to link with MSVC due to a missing .lib file (fatal error LNK1181). Why?"],"context":{"gi-language":["default"]}},{"url":"GuiTutorial.html#upgrading-the-program-to-use-sdl","node_type":"p","page":"Building a simple SDL2 app from scratch","sections":["Upgrading the program to use SDL"],"context":{"gi-language":["default"]}},{"url":"Mixing-build-systems.html#mesons-policy-on-mixing-multiple-build-systems-in-one-build-directory","node_type":"p","page":"Meson's policy on mixing multiple build systems in one build directory","sections":["Meson's policy on mixing multiple build systems in one build directory"],"context":{"gi-language":["default"]}},{"url":"Python-module.html#find_installation","node_type":"ul","page":"Python module","sections":["Python module","Functions","find_installation()"],"context":{"gi-language":["default"]}},{"url":"Python-module.html#full_path","node_type":"p","page":"Python module","sections":["Python module","\npython_installation object","Methods","full_path()"],"context":{"gi-language":["default"]}},{"url":"Python-module.html#path","node_type":"p","page":"Python module","sections":["Python module","\npython_installation object","Methods","path()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_elementary_str.html#arguments2","node_type":"table","page":"str","sections":["String (str)","String methods","str.format()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_elementary_str.html#format_fmt","node_type":"p","page":"str","sections":["String (str)","String methods","str.format()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#add_global_arguments","node_type":"p","page":"Functions","sections":["Functions","add_global_arguments()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#add_global_link_arguments","node_type":"p","page":"Functions","sections":["Functions","add_global_link_arguments()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments50","node_type":"table","page":"Functions","sections":["Functions","subproject()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#subproject","node_type":"ul","page":"Functions","sections":["Functions","subproject()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#subproject_required","node_type":"p","page":"Functions","sections":["Functions","subproject()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#subproject_version","node_type":"p","page":"Functions","sections":["Functions","subproject()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_returned_both_libs.html#build_tgtprivate_dir_include","node_type":"p","page":"Both libraries object","sections":["Both libraries object (both_libs extends lib)","Inherited methods","build_tgt.private_dir_include()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_returned_build_tgt.html#build_tgtprivate_dir_include","node_type":"p","page":"Build target","sections":["Build target (build_tgt extends tgt)","Build target methods","build_tgt.private_dir_include()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_returned_exe.html#build_tgtprivate_dir_include","node_type":"p","page":"Executable target","sections":["Executable target (exe extends build_tgt)","Inherited methods","build_tgt.private_dir_include()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_returned_jar.html#build_tgtprivate_dir_include","node_type":"p","page":"JAR build target","sections":["JAR build target (jar extends build_tgt)","Inherited methods","build_tgt.private_dir_include()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_returned_lib.html#build_tgtprivate_dir_include","node_type":"p","page":"Library target","sections":["Library target (lib extends build_tgt)","Inherited methods","build_tgt.private_dir_include()"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-40-0.html#cygwin-support","node_type":"p","page":"Release 0.40","sections":["New features","Cygwin support"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-40-0.html#outputs-of-generators-can-be-used-in-custom-targets-in-the-vs-backend","node_type":"p","page":"Release 0.40","sections":["New features","Outputs of generators can be used in custom targets in the VS backend"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-41-0.html#a-target-for-creating-tarballs","node_type":"p","page":"Release 0.41","sections":["New features","A target for creating tarballs"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-44-0.html#an-array-type-for-user-options","node_type":"p","page":"Release 0.44","sections":["New features","An array type for user options"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-46-0.html#declare_dependency-now-supports-link_whole","node_type":"p","page":"Release 0.46","sections":["New features","declare_dependency() now supports link_whole:\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#made-install-a-top-level-meson-command","node_type":"p","page":"Release 0.47","sections":["New features","Made 'install' a top level Meson command"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-48-0.html#toggles-for-build-type-optimization-and-vcrt-type","node_type":"p","page":"Release 0.48","sections":["New features","Toggles for build type, optimization and vcrt type"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-49-0.html#joining-paths-with-","node_type":"p","page":"Release 0.49","sections":["New features","Joining paths with /"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-50-0.html#new-not_found_message-for-dependency","node_type":"p","page":"Release 0.50.0","sections":["New features","New not_found_message for dependency()\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#add-a-system-type-dependency-for-zlib","node_type":"p","page":"Release 0.54.0","sections":["New features","Add a system type dependency for zlib"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#environment-variables-with-cross-builds","node_type":"p","page":"Release 0.54.0","sections":["New features","Environment Variables with Cross Builds"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#experimental-support-for-c-modules-in-visual-studio","node_type":"p","page":"Release 0.57.0","sections":["New features","Experimental support for C++ modules in Visual Studio"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#support-added-for-llvms-thinlto","node_type":"p","page":"Release 0.57.0","sections":["New features","Support added for LLVM's thinLTO"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-58-0.html#address-sanitizer-support-for-visual-studio","node_type":"p","page":"Release 0.58.0","sections":["New features","Address sanitizer support for Visual Studio"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-58-0.html#jni-system-dependency","node_type":"p","page":"Release 0.58.0","sections":["New features","JNI System Dependency"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-58-0.html#mesonget_cross_property-has-been-deprecated","node_type":"p","page":"Release 0.58.0","sections":["New features","\nmeson.get_cross_property() has been deprecated"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-59-0.html#new-custom-dependency-for-libintl","node_type":"p","page":"Release 0.59.0","sections":["New features","New custom dependency for libintl"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-59-0.html#qtpreprocess-source-arguments-deprecated","node_type":"p","page":"Release 0.59.0","sections":["New features","Qt.preprocess source arguments deprecated"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-60-0.html#improvements-for-the-rustc-compiler","node_type":"ul","page":"Release 0.60.0","sections":["New features","Improvements for the Rustc compiler"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-60-0.html#install_emptydir-function","node_type":"p","page":"Release 0.60.0","sections":["New features","install_emptydir function"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-0-0.html#in-operator-for-strings","node_type":"p","page":"Release 1.0.0","sections":["New features","\nin operator for strings"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-1-0.html#coercing-values-in-the-option-function-is-deprecated","node_type":"p","page":"Release 1.1.0","sections":["New features","coercing values in the option() function is deprecated"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-1-0.html#new-pybind11-custom-dependency","node_type":"p","page":"Release 1.1.0","sections":["New features","New pybind11 custom dependency"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-2-0.html#added-metrowerks-cc-toolchains","node_type":"p","page":"Release 1.2.0","sections":["New features","Added Metrowerks C/C++ toolchains"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-5-0.html#meson-configure-handles-changes-to-options-in-more-cases","node_type":"p","page":"Release 1.5.0","sections":["New features","Meson configure handles changes to options in more cases"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-9-0.html#support-for-masm-in-visual-studio-backends","node_type":"p","page":"Release 1.9.0","sections":["New features","Support for MASM in Visual Studio backends"],"context":{"gi-language":["default"]}},{"url":"SourceSet-module.html#add","node_type":"p","page":"Source set module","sections":["Source set module","\nsource_set object","Methods","add()"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#dictionaries","node_type":"p","page":"Syntax","sections":["Syntax","Dictionaries"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#format","node_type":"p","page":"Syntax","sections":["Syntax","Strings","String formatting",".format()"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#ternary-operator","node_type":"p","page":"Syntax","sections":["Syntax","Ternary operator"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#variables","node_type":"p","page":"Syntax","sections":["Syntax","Variables"],"context":{"gi-language":["default"]}},{"url":"Unity-builds.html#unity-builds","node_type":"p","page":"Unity builds","sections":["Unity builds"],"context":{"gi-language":["default"]}},{"url":"Use-of-Python.html#cross-platform-tooling","node_type":"p","page":"Use of Python","sections":["Dependency hell","Cross platform tooling"],"context":{"gi-language":["default"]}},{"url":"Using-with-Visual-Studio.html#using-clangcl-with-visual-studio","node_type":"p","page":"Using with Visual Studio","sections":["Using Clang-CL with Visual Studio"],"context":{"gi-language":["default"]}},{"url":"Using-wraptool.html#using-wraptool","node_type":"p","page":"Using wraptool","sections":["Using wraptool"],"context":{"gi-language":["default"]}},{"url":"Vala.html#adding-to-valas-search-path","node_type":"p","page":"Vala","sections":["Compiling Vala applications and libraries","Using libraries","Adding to Vala's search path"],"context":{"gi-language":["default"]}},{"url":"Vala.html#the-simplest-case","node_type":"p","page":"Vala","sections":["Compiling Vala applications and libraries","Using libraries","The simplest case"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#declare-generated-headers-explicitly","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Declare generated headers explicitly"],"context":{"gi-language":["default"]}},{"url":"Wrap-dependency-system-manual.html#how-it-works","node_type":"h2","page":"Wrap dependency system manual","sections":["Wrap dependency system manual","How it works"],"context":{"gi-language":["default"]}},{"url":"index.html#features","node_type":"ul","page":"The Meson Build system","sections":["The Meson Build system","Features"],"context":{"gi-language":["default"]}}]});