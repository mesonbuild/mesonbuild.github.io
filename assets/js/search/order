urls_downloaded_cb({"token":"order","urls":[{"url":"ARM-performance-test.html#measurements","node_type":"p","page":"Arm performance test","sections":["Arm performance test","Measurements"],"context":{"gi-language":["default"]}},{"url":"Adding-new-projects-to-wrapdb.html#creating-the-wrap-contents","node_type":"p","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB","How to contribute a new wrap","Creating the wrap contents"],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#specifying-options-per-subproject","node_type":"p","page":"Built-in options","sections":["Built-in options","Specifying options per subproject"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#do-i-need-to-sign-a-cla-in-order-to-contribute","node_type":"h2","page":"Contributing to Meson","sections":["Contributing to Meson","Do I need to sign a CLA in order to contribute?"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#python","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Dependency support policy","Python"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#stdout","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Tests","Configuring project tests","stdout"],"context":{"gi-language":["default"]}},{"url":"Creating-OSX-packages.html#external-libraries","node_type":"p","page":"Creating OSX packages","sections":["Creating OSX packages","Creating an app bundle","External libraries"],"context":{"gi-language":["default"]}},{"url":"Creating-OSX-packages.html#putting-it-all-together","node_type":"p","page":"Creating OSX packages","sections":["Creating OSX packages","Putting it all together"],"context":{"gi-language":["default"]}},{"url":"Cross-compilation.html#cross-file-locations","node_type":"ul","page":"Cross compilation","sections":["Cross compilation","Cross file locations"],"context":{"gi-language":["default"]}},{"url":"Cuda-module.html#nvcc_arch_flags","node_type":"p","page":"Unstable CUDA Module","sections":["Unstable CUDA Module","Functions","nvcc_arch_flags()"],"context":{"gi-language":["default"]}},{"url":"D.html#compiling-d-libraries-and-installing-them","node_type":"p","page":"D","sections":["Compiling D libraries and installing them"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#dependencies-with-custom-lookup-functionality","node_type":"p","page":"Dependencies","sections":["Dependencies with custom lookup functionality"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#dependency-detection-method","node_type":"p","page":"Dependencies","sections":["Dependency detection method"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#objfw","node_type":"p","page":"Dependencies","sections":["Dependencies with custom lookup functionality","ObjFW"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#qt","node_type":"p","page":"Dependencies","sections":["Dependencies with custom lookup functionality","Qt"],"context":{"gi-language":["default"]}},{"url":"Dependencies.html#shaderc","node_type":"p","page":"Dependencies","sections":["Dependencies with custom lookup functionality","Shaderc"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#does-wrap-download-sources-behind-my-back","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Does wrap download sources behind my back?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#how-do-i-tell-meson-that-my-sources-use-generated-headers","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","How do I tell Meson that my sources use generated headers?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#how-do-i-use-a-library-before-declaring-it","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","How do I use a library before declaring it?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#i-have-proprietary-compiler-toolchain-x-that-does-not-work-with-meson-how-can-i-make-it-work","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","I have proprietary compiler toolchain X that does not work with Meson, how can I make it work?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-are-changes-to-default-project-options-ignored","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why are changes to default project options ignored?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-is-there-not-a-make-backend","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why is there not a Make backend?"],"context":{"gi-language":["default"]}},{"url":"Generating-sources.html#generating-multiple-files-at-a-time","node_type":"p","page":"Generating sources","sections":["Generating sources","Using custom_target()","Generating multiple files at a time"],"context":{"gi-language":["default"]}},{"url":"Gnome-module.html#gnomegdbus_codegen","node_type":"p","page":"GNOME module","sections":["GNOME module","Usage","gnome.gdbus_codegen()"],"context":{"gi-language":["default"]}},{"url":"Installing.html#installing-as-the-superuser","node_type":"p","page":"Installing","sections":["Installing","Installing as the superuser"],"context":{"gi-language":["default"]}},{"url":"Keyval-module.html#keyvalload","node_type":"p","page":"keyval module","sections":["keyval module","Usage","keyval.load()"],"context":{"gi-language":["default"]}},{"url":"Localisation.html#potfiles","node_type":"p","page":"Localisation","sections":["Localisation","Generating .pot and .po files","POTFILES"],"context":{"gi-language":["default"]}},{"url":"Machine-files.html#meson-builtin-options","node_type":"p","page":"Cross and Native File reference","sections":["Cross and Native File reference","Sections","Meson built-in options"],"context":{"gi-language":["default"]}},{"url":"Native-environments.html#native-file-locations","node_type":"ul","page":"Persistent native environments","sections":["Persistent native environments","Native file locations"],"context":{"gi-language":["default"]}},{"url":"Pkgconfig-module.html#pkggenerate","node_type":"p","page":"Pkgconfig module","sections":["Pkgconfig module","Usage","pkg.generate()"],"context":{"gi-language":["default"]}},{"url":"Pkgconfig-module.html#relocatable-pkgconfig-files","node_type":"p","page":"Pkgconfig module","sections":["Pkgconfig module","Usage","Relocatable pkg-config files"],"context":{"gi-language":["default"]}},{"url":"Precompiled-headers.html#toggling-the-usage-of-precompiled-headers","node_type":"p","page":"Precompiled headers","sections":["Precompiled headers","Toggling the usage of precompiled headers"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_elementary_dict.html#dict-dict","node_type":"p","page":"dict","sections":["Dict (dict)"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments17","node_type":"p","page":"Functions","sections":["Functions","dependency()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments52","node_type":"table","page":"Functions","sections":["Functions","test()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments9","node_type":"table","page":"Functions","sections":["Functions","benchmark()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#benchmark_priority","node_type":"p","page":"Functions","sections":["Functions","benchmark()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#dependency","node_type":"p","page":"Functions","sections":["Functions","dependency()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#find_program","node_type":"p","page":"Functions","sections":["Functions","find_program()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#summary","node_type":"p","page":"Functions","sections":["Functions","summary()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#test_priority","node_type":"p","page":"Functions","sections":["Functions","test()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#vcs_tag","node_type":"p","page":"Functions","sections":["Functions","vcs_tag()"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#per-subproject-default_library-and-werror-options","node_type":"p","page":"Release 0.54.0","sections":["New features","Per subproject default_library and werror options"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#-is-now-allowed-as-a-function-id-for-meson-rewrite","node_type":"p","page":"Release 0.57.0","sections":["New features","\n// is now allowed as a function id for meson rewrite."],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-60-0.html#dependencies-with-multiple-names","node_type":"p","page":"Release 0.60.0","sections":["New features","Dependencies with multiple names"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#deprecated-javagenerate_native_header-in-favor-of-the-new-javagenerate_native_headers","node_type":"p","page":"Release 0.62.0","sections":["New features","Deprecated java.generate_native_header() in favor of the new java.generate_native_headers()\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#new-custom-dependency-for-openssl","node_type":"p","page":"Release 0.62.0","sections":["New features","New custom dependency for OpenSSL"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-63-0.html#python-extension-modules-now-depend-on-the-python-library-by-default","node_type":"p","page":"Release 0.63.0","sections":["New features","Python extension modules now depend on the python library by default"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-7-0.html#test-targets-no-longer-built-by-default","node_type":"p","page":"Release 1.7.0","sections":["New features","Test targets no longer built by default"],"context":{"gi-language":["default"]}},{"url":"Rewriter.html#setting-the-project-version","node_type":"p","page":"Meson file rewriter","sections":["Meson file rewriter","Using the rewriter","Setting the project version"],"context":{"gi-language":["default"]}},{"url":"Simple-comparison.html#a-simple-comparison","node_type":"p","page":"A simple comparison","sections":["A simple comparison"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#why-must-all-subprojects-be-inside-a-single-directory","node_type":"p","page":"Subprojects","sections":["Subprojects","Why must all subprojects be inside a single directory?"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#dictionaries","node_type":"p","page":"Syntax","sections":["Syntax","Dictionaries"],"context":{"gi-language":["default"]}},{"url":"Unit-tests.html#priorities","node_type":"p","page":"Unit tests","sections":["Unit tests","Priorities"],"context":{"gi-language":["default"]}},{"url":"Using-with-Visual-Studio.html#using-with-visual-studio","node_type":"p","page":"Using with Visual Studio","sections":["Using with Visual Studio"],"context":{"gi-language":["default"]}},{"url":"Wayland-module.html#scan_xml","node_type":"p","page":"Unstable Wayland Module","sections":["Unstable Wayland Module","Methods","scan_xml"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#avoid-exposing-compilable-source-files-in-declare_dependency","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Avoid exposing compilable source files in declare_dependency"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#declare-generated-headers-explicitly","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Declare generated headers explicitly"],"context":{"gi-language":["default"]}},{"url":"Wrap-dependency-system-manual.html#specific-to-wrapgit","node_type":"ul","page":"Wrap dependency system manual","sections":["Wrap dependency system manual","Accepted configuration properties for wraps","Specific to wrap-git"],"context":{"gi-language":["default"]}}]});