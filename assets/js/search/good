urls_downloaded_cb({"token":"good","urls":[{"url":"Comparisons.html#cons3","node_type":"p","page":"Comparisons","sections":["Comparing Meson with other build systems","Bazel","Cons"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#python","node_type":"ul","page":"Contributing to Meson","sections":["Contributing to Meson","Dependency support policy","Python"],"context":{"gi-language":["default"]}},{"url":"Creating-Linux-binaries.html#installing-system-and-gcc","node_type":"p","page":"Creating Linux binaries","sections":["Creating Linux binaries","Installing system and GCC"],"context":{"gi-language":["default"]}},{"url":"Creating-OSX-packages.html#creating-a-dmg-installer","node_type":"p","page":"Creating OSX packages","sections":["Creating OSX packages","Creating a .dmg installer"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#can-we-do-better","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Can we do better?"],"context":{"gi-language":["default"]}},{"url":"Donating.html#donating-to-support-meson-development","node_type":"p","page":"Donating to support Meson development","sections":["Donating to support Meson development"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#but-i-really-want-a-version-of-meson-that-doesnt-use-python","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","But I really want a version of Meson that doesn't use python!"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#how-do-i-tell-meson-that-my-sources-use-generated-headers","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","How do I tell Meson that my sources use generated headers?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#how-do-i-use-a-library-before-declaring-it","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","How do I use a library before declaring it?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#i-have-proprietary-compiler-toolchain-x-that-does-not-work-with-meson-how-can-i-make-it-work","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","I have proprietary compiler toolchain X that does not work with Meson, how can I make it work?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-is-meson-not-just-a-python-module-so-i-could-code-my-build-setup-in-python","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why is Meson not just a Python module so I could code my build setup in Python?"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-51-0.html#tests-that-should-fail-but-did-not-are-now-errors","node_type":"p","page":"Release 0.51.0","sections":["New features","Tests that should fail but did not are now errors"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-56-0.html#added-compcert-c-compiler","node_type":"p","page":"Release 0.56.0","sections":["New features","Added CompCert C compiler"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-63-0.html#coverage-targets-now-respect-tool-config-files","node_type":"p","page":"Release 0.63.0","sections":["New features","Coverage targets now respect tool config files"],"context":{"gi-language":["default"]}},{"url":"Release-procedure.html#trunk","node_type":"p","page":"Release procedure","sections":["Trunk"],"context":{"gi-language":["default"]}}]});