urls_downloaded_cb({"token":"reason","urls":[{"url":"Adding-arguments.html#global-arguments","node_type":"p","page":"Adding arguments","sections":["Adding arguments","Global arguments"],"context":{"gi-language":["default"]}},{"url":"Adding-new-projects-to-wrapdb.html#choosing-the-wrap-name","node_type":"p","page":"Adding new projects to WrapDB","sections":["Adding new projects to WrapDB","Choosing the wrap name"],"context":{"gi-language":["default"]}},{"url":"Build-targets.html#object-files","node_type":"p","page":"Build targets","sections":["Build targets","Object files"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#expect_skip_on_jobname","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Tests","Configuring project tests","expect_skip_on_jobname"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#no-lingering-state","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","No lingering state"],"context":{"gi-language":["default"]}},{"url":"Creating-Linux-binaries.html#final-steps","node_type":"p","page":"Creating Linux binaries","sections":["Creating Linux binaries","Final steps"],"context":{"gi-language":["default"]}},{"url":"Creating-OSX-packages.html#creating-osx-packages","node_type":"p","page":"Creating OSX packages","sections":["Creating OSX packages"],"context":{"gi-language":["default"]}},{"url":"Creating-releases.html#autotools-dist-vs-meson-dist","node_type":"p","page":"Creating releases","sections":["Creating releases","Autotools dist VS Meson dist"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#3-must-enforce-established-best-practices","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Can we do better?","3. Must enforce established best practices"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#sample-code","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Sample code"],"context":{"gi-language":["default"]}},{"url":"External-Project-module.html#external-project-module","node_type":"ul","page":"External Project module","sections":["External Project module"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#do-i-need-to-add-my-headers-to-the-sources-list-like-in-autotools","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Do I need to add my headers to the sources list like in Autotools?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-are-changes-to-default-project-options-ignored","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why are changes to default project options ignored?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-cant-i-specify-target-files-with-a-wildcard","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why can't I specify target files with a wildcard?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-does-building-my-project-with-msvc-output-static-libraries-called-libfooa","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why does building my project with MSVC output static libraries called libfoo.a?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-doesnt-meson-have-user-defined-functionsmacros","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why doesn't meson have user defined functions/macros?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-is-there-not-a-make-backend","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why is there not a Make backend?"],"context":{"gi-language":["default"]}},{"url":"Feature-autodetection.html#ccache","node_type":"p","page":"Feature autodetection","sections":["Feature autodetection","Ccache"],"context":{"gi-language":["default"]}},{"url":"Generating-sources.html#using-generator","node_type":"p","page":"Generating sources","sections":["Generating sources","Using generator()"],"context":{"gi-language":["default"]}},{"url":"GuiTutorial.html#upgrading-the-program-to-use-sdl","node_type":"p","page":"Building a simple SDL2 app from scratch","sections":["Upgrading the program to use SDL"],"context":{"gi-language":["default"]}},{"url":"IndepthTutorial.html#an-indepth-tutorial","node_type":"p","page":"An in-depth tutorial","sections":["An in-depth tutorial"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_returned_feature.html#featuredisable_if","node_type":"p","page":"Feature option object","sections":["Feature option object (feature)","Feature option object methods","feature.disable_if()"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#environment-variables-with-cross-builds","node_type":"p","page":"Release 0.54.0","sections":["New features","Environment Variables with Cross Builds"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#introduce-dataonly-for-the-pkgconfig-module","node_type":"p","page":"Release 0.54.0","sections":["New features","Introduce dataonly for the pkgconfig module"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-60-0.html#link-tests-can-use-sources-for-a-different-compiler","node_type":"p","page":"Release 0.60.0","sections":["New features","Link tests can use sources for a different compiler"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#configuring-the-build-directory","node_type":"p","page":"Running Meson","sections":["Running Meson","Configuring the build directory"],"context":{"gi-language":["default"]}},{"url":"Simple-comparison.html#a-simple-comparison","node_type":"p","page":"A simple comparison","sections":["A simple comparison"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#subprojects","node_type":"p","page":"Subprojects","sections":["Subprojects"],"context":{"gi-language":["default"]}},{"url":"Syntax.html#userdefined-functions-and-methods","node_type":"p","page":"Syntax","sections":["Syntax","User-defined functions and methods"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#declare-generated-headers-explicitly","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Declare generated headers explicitly"],"context":{"gi-language":["default"]}}]});