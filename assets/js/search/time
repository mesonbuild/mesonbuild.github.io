urls_downloaded_cb({"token":"time","urls":[{"url":"ARM-performance-test.html#measurements","node_type":"p","page":"Arm performance test","sections":["Arm performance test","Measurements"],"context":{"gi-language":["default"]}},{"url":"Build-options.html#build-options","node_type":"p","page":"Build options","sections":["Build options"],"context":{"gi-language":["default"]}},{"url":"Build-system-converters.html#build-system-converters","node_type":"p","page":"Build system converters","sections":["Build system converters"],"context":{"gi-language":["default"]}},{"url":"Build-targets.html#build-targets","node_type":"p","page":"Build targets","sections":["Build targets"],"context":{"gi-language":["default"]}},{"url":"Build-targets.html#libraries-and-executables","node_type":"p","page":"Build targets","sections":["Build targets","Libraries and executables"],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#base-options","node_type":"table","page":"Built-in options","sections":["Built-in options","Base options"],"context":{"gi-language":["default"]}},{"url":"Builtin-options.html#specifying-options-per-subproject","node_type":"p","page":"Built-in options","sections":["Built-in options","Specifying options per subproject"],"context":{"gi-language":["default"]}},{"url":"Compiler-properties.html#compiler-properties","node_type":"p","page":"Compiler properties","sections":["Compiler properties"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#a-green-ci-run-is-mandatory-for-merging","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","A green CI run is mandatory for merging"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#project-tests","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Tests","Project tests"],"context":{"gi-language":["default"]}},{"url":"Contributing.html#python","node_type":"p","page":"Contributing to Meson","sections":["Contributing to Meson","Dependency support policy","Python"],"context":{"gi-language":["default"]}},{"url":"Creating-releases.html#skip-build-and-test-with-notests","node_type":"p","page":"Creating releases","sections":["Creating releases","Skip build and test with --no-tests\n"],"context":{"gi-language":["default"]}},{"url":"Cross-compilation.html#changing-cross-file-settings","node_type":"p","page":"Cross compilation","sections":["Cross compilation","Changing cross file settings"],"context":{"gi-language":["default"]}},{"url":"Cross-compilation.html#cross-compilation","node_type":"p","page":"Cross compilation","sections":["Cross compilation"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#5-must-not-add-complexity-due-to-obsolete-platforms","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Can we do better?","5. Must not add complexity due to obsolete platforms"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#get-the-code","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Get the code"],"context":{"gi-language":["default"]}},{"url":"Design-rationale.html#sample-code","node_type":"p","page":"Design rationale","sections":["This is the original design rationale for Meson. The syntax it\ndescribes does not match the released version","Sample code"],"context":{"gi-language":["default"]}},{"url":"Donating.html#donating-to-support-meson-development","node_type":"p","page":"Donating to support Meson development","sections":["Donating to support Meson development"],"context":{"gi-language":["default"]}},{"url":"External-Project-module.html#using-wrap-file","node_type":"p","page":"External Project module","sections":["External Project module","Using wrap file"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#but-i-really-want-to-use-wildcards","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","But I really want to use wildcards!"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#i-have-proprietary-compiler-toolchain-x-that-does-not-work-with-meson-how-can-i-make-it-work","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","I have proprietary compiler toolchain X that does not work with Meson, how can I make it work?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-are-changes-to-default-project-options-ignored","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why are changes to default project options ignored?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-cant-i-specify-target-files-with-a-wildcard","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why can't I specify target files with a wildcard?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-doesnt-meson-have-user-defined-functionsmacros","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why doesn't meson have user defined functions/macros?"],"context":{"gi-language":["default"]}},{"url":"FAQ.html#why-is-meson-implemented-in-python-rather-than-programming-language-x","node_type":"p","page":"FAQ","sections":["Meson Frequently Asked Questions","Why is Meson implemented in Python rather than [programming language X]?"],"context":{"gi-language":["default"]}},{"url":"Feature-autodetection.html#ccache","node_type":"p","page":"Feature autodetection","sections":["Feature autodetection","Ccache"],"context":{"gi-language":["default"]}},{"url":"Fs-module.html#copyfile","node_type":"p","page":"FS (filesystem) module","sections":["FS (filesystem) module","Filename modification","copyfile"],"context":{"gi-language":["default"]}},{"url":"Generating-sources.html#generating-multiple-files-at-a-time","node_type":"h3","page":"Generating sources","sections":["Generating sources","Using custom_target()","Generating multiple files at a time"],"context":{"gi-language":["default"]}},{"url":"Generating-sources.html#using-custom_target","node_type":"p","page":"Generating sources","sections":["Generating sources","Using custom_target()"],"context":{"gi-language":["default"]}},{"url":"IDE-integration.html#install-plan","node_type":"p","page":"IDE integration","sections":["IDE integration","The targets section","Install plan"],"context":{"gi-language":["default"]}},{"url":"Installing.html#custom-install-script","node_type":"p","page":"Installing","sections":["Installing","Custom install script"],"context":{"gi-language":["default"]}},{"url":"Installing.html#installation-tags","node_type":"p","page":"Installing","sections":["Installing","Installation tags"],"context":{"gi-language":["default"]}},{"url":"Installing.html#installing","node_type":"p","page":"Installing","sections":["Installing"],"context":{"gi-language":["default"]}},{"url":"Manual.html#subpages","node_type":"p","page":"Manual","sections":[],"context":{"gi-language":["default"]}},{"url":"Mixing-build-systems.html#the-definition-of-build-system-mixing","node_type":"p","page":"Meson's policy on mixing multiple build systems in one build directory","sections":["Meson's policy on mixing multiple build systems in one build directory","The definition of \"build system mixing\""],"context":{"gi-language":["default"]}},{"url":"Pkgconfig-module.html#implicit-dependencies","node_type":"p","page":"Pkgconfig module","sections":["Pkgconfig module","Usage","Implicit dependencies"],"context":{"gi-language":["default"]}},{"url":"Precompiled-headers.html#toggling-the-usage-of-precompiled-headers","node_type":"p","page":"Precompiled headers","sections":["Precompiled headers","Toggling the usage of precompiled headers"],"context":{"gi-language":["default"]}},{"url":"Quick-guide.html#compiling-a-meson-project","node_type":"p","page":"Quickstart Guide","sections":["Using Meson","Compiling a Meson project"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_builtin_meson.html#mesonis_unity","node_type":"p","page":"meson","sections":["Meson object (meson)","Meson object methods","meson.is_unity()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments14","node_type":"table","page":"Functions","sections":["Functions","custom_target()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments17","node_type":"table","page":"Functions","sections":["Functions","dependency()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments22","node_type":"table","page":"Functions","sections":["Functions","find_program()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments40","node_type":"table","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments50","node_type":"table","page":"Functions","sections":["Functions","subproject()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments52","node_type":"table","page":"Functions","sections":["Functions","test()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#arguments9","node_type":"table","page":"Functions","sections":["Functions","benchmark()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#benchmark_timeout","node_type":"p","page":"Functions","sections":["Functions","benchmark()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#custom_target_build_always","node_type":"p","page":"Functions","sections":["Functions","custom_target()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#custom_target_console","node_type":"p","page":"Functions","sections":["Functions","custom_target()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#dependency_default_options","node_type":"p","page":"Functions","sections":["Functions","dependency()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#find_program_default_options","node_type":"p","page":"Functions","sections":["Functions","find_program()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#library","node_type":"p","page":"Functions","sections":["Functions","library()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#project_default_options","node_type":"p","page":"Functions","sections":["Functions","project()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#shared_module","node_type":"p","page":"Functions","sections":["Functions","shared_module()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#subproject","node_type":"ul","page":"Functions","sections":["Functions","subproject()"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#subproject_default_options","node_type":"p","page":"Functions","sections":["Functions","subproject()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#test_is_parallel","node_type":"p","page":"Functions","sections":["Functions","test()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#test_timeout","node_type":"p","page":"Functions","sections":["Functions","test()","Arguments"],"context":{"gi-language":["default"]}},{"url":"Reference-manual_functions.html#vcs_tag","node_type":"p","page":"Functions","sections":["Functions","vcs_tag()"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-40-0.html#outputs-of-generators-can-be-used-in-custom-targets-in-the-vs-backend","node_type":"p","page":"Release 0.40","sections":["New features","Outputs of generators can be used in custom targets in the VS backend"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-43-0.html#portability-improvements-to-boost-dependency","node_type":"p","page":"Release 0.43","sections":["Portability improvements to Boost Dependency"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-45-0.html#removed-two-deprecated-features","node_type":"p","page":"Release 0.45","sections":["New features","Removed two deprecated features"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-46-0.html#building-both-shared-and-static-libraries","node_type":"p","page":"Release 0.46","sections":["New features","Building both shared and static libraries"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-46-0.html#old-command-names-are-now-errors","node_type":"p","page":"Release 0.46","sections":["New features","Old command names are now errors"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-47-0.html#new-action-copy-for-configure_file","node_type":"p","page":"Release 0.47","sections":["New features","New action copy: for configure_file()\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-48-0.html#new-kwarg-console-for-custom_target","node_type":"p","page":"Release 0.48","sections":["New features","New kwarg console for custom_target()\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-50-0.html#added-option-to-introspect-multiple-parameters-at-once","node_type":"p","page":"Release 0.50.0","sections":["New features","Added option to introspect multiple parameters at once"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#dependency-consistency","node_type":"p","page":"Release 0.54.0","sections":["New features","\ndependency() consistency"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#ninja-version-requirement-bumped-to-17","node_type":"p","page":"Release 0.54.0","sections":["New features","Ninja version requirement bumped to 1.7"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-54-0.html#per-subproject-default_library-and-werror-options","node_type":"p","page":"Release 0.54.0","sections":["New features","Per subproject default_library and werror options"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-55-0.html#meson-dist-notests","node_type":"p","page":"Release 0.55.0","sections":["New features","meson dist --no-tests"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-56-0.html#preliminary-aix-support","node_type":"p","page":"Release 0.56.0","sections":["New features","Preliminary AIX support"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#edit-and-continue-zi-is-no-longer-used-by-default-for-visual-studio","node_type":"p","page":"Release 0.57.0","sections":["New features","\"Edit and continue\" (/ZI) is no longer used by default for Visual Studio"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#msvcclangcl-argument-changescleanup","node_type":"ul","page":"Release 0.57.0","sections":["New features","MSVC/Clang-Cl Argument Changes/Cleanup"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#new-logging-format-for-meson-test","node_type":"ul","page":"Release 0.57.0","sections":["New features","New logging format for meson test\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-57-0.html#support-for-reading-files-at-configuration-time-with-the-fs-module","node_type":"h2","page":"Release 0.57.0","sections":["New features","Support for reading files at configuration time with the fs module"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-60-0.html#compilerunittest_args-has-been-removed","node_type":"p","page":"Release 0.60.0","sections":["New features","Compiler.unittest_args has been removed"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-60-0.html#install-destdir-relative-to-build-directory","node_type":"p","page":"Release 0.60.0","sections":["New features","Install DESTDIR relative to build directory"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-61-0.html#visual-studio-2022-backend","node_type":"p","page":"Release 0.61.0","sections":["New features","Visual Studio 2022 backend"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-62-0.html#structured_sources","node_type":"p","page":"Release 0.62.0","sections":["New features","structured_sources()"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-63-0.html#added-debug-function","node_type":"p","page":"Release 0.63.0","sections":["New features","Added debug function"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-64-0.html#fscopyfile-to-replace-configure_filecopy-true","node_type":"p","page":"Release 0.64.0","sections":["New features","\nfs.copyfile to replace configure_file(copy : true)\n"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-64-0.html#option-to-allow-meson-test-to-fail-fast-after-the-first-failing-testcase","node_type":"p","page":"Release 0.64.0","sections":["New features","Option to allow meson test to fail fast after the first failing testcase"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-0-64-0.html#pythonfind_installation-now-accepts-pure-argument","node_type":"p","page":"Release 0.64.0","sections":["New features","python.find_installation() now accepts pure argument"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-0-0.html#the-rust-module-is-stable","node_type":"p","page":"Release 1.0.0","sections":["New features","The Rust module is stable"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-3-0.html#lang_sharedstatic_args-for-both_library-library-and-build_target","node_type":"p","page":"Release 1.3.0","sections":["New features","\n<lang>_(shared|static)_args for both_library, library, and build_target"],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-6-0.html#default-to-printing-deprecations-when-no-minimum-version-is-specified","node_type":"p","page":"Release 1.6.0","sections":["New features","Default to printing deprecations when no minimum version is specified."],"context":{"gi-language":["default"]}},{"url":"Release-notes-for-1-8-0.html#new-option-to-execute-a-slice-of-tests","node_type":"p","page":"Release 1.8.0","sections":["New features","New option to execute a slice of tests"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#configuring-the-build-directory","node_type":"p","page":"Running Meson","sections":["Running Meson","Configuring the build directory"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#installing","node_type":"p","page":"Running Meson","sections":["Running Meson","Installing"],"context":{"gi-language":["default"]}},{"url":"Running-Meson.html#running-meson","node_type":"p","page":"Running Meson","sections":["Running Meson"],"context":{"gi-language":["default"]}},{"url":"Rust.html#mixing-generated-and-static-sources","node_type":"p","page":"Rust","sections":["Using Rust with Meson","Mixing Generated and Static sources"],"context":{"gi-language":["default"]}},{"url":"Shipping-prebuilt-binaries-as-wraps.html#note-for-linux-libraries","node_type":"p","page":"Shipping prebuilt binaries as wraps","sections":["Shipping prebuilt binaries as wraps","Note for Linux libraries"],"context":{"gi-language":["default"]}},{"url":"Shipping-prebuilt-binaries-as-wraps.html#shipping-prebuilt-binaries-as-wraps","node_type":"p","page":"Shipping prebuilt binaries as wraps","sections":["Shipping prebuilt binaries as wraps"],"context":{"gi-language":["default"]}},{"url":"Simple-comparison.html#a-simple-comparison","node_type":"p","page":"A simple comparison","sections":["A simple comparison"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#subprojects","node_type":"p","page":"Subprojects","sections":["Subprojects"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#update-subprojects","node_type":"ul","page":"Subprojects","sections":["Subprojects","\nmeson subprojects command","Update subprojects"],"context":{"gi-language":["default"]}},{"url":"Subprojects.html#why-must-all-subprojects-be-inside-a-single-directory","node_type":"p","page":"Subprojects","sections":["Subprojects","Why must all subprojects be inside a single directory?"],"context":{"gi-language":["default"]}},{"url":"Tutorial.html#adding-dependencies","node_type":"p","page":"Tutorial","sections":["Tutorial","Adding dependencies"],"context":{"gi-language":["default"]}},{"url":"Unit-tests.html#parallelism","node_type":"p","page":"Unit tests","sections":["Unit tests","Parallelism"],"context":{"gi-language":["default"]}},{"url":"Using-multiple-build-directories.html#multiple-build-directories-for-the-same-source-tree","node_type":"p","page":"Using multiple build directories","sections":["Using multiple build directories","Multiple build directories for the same source tree"],"context":{"gi-language":["default"]}},{"url":"Using-with-Visual-Studio.html#using-with-visual-studio","node_type":"p","page":"Using with Visual Studio","sections":["Using with Visual Studio"],"context":{"gi-language":["default"]}},{"url":"Vala.html#gobject-introspection-and-language-bindings","node_type":"p","page":"Vala","sections":["Compiling Vala applications and libraries","Building libraries","GObject Introspection and language bindings"],"context":{"gi-language":["default"]}},{"url":"Wrap-best-practices-and-tips.html#declare-generated-headers-explicitly","node_type":"p","page":"Wrap best practices and tips","sections":["Wrap best practices and tips","Declare generated headers explicitly"],"context":{"gi-language":["default"]}},{"url":"howtox.html#add-some-optimization-to-debug-builds","node_type":"p","page":"How do I do X in Meson?","sections":["How do I do X in Meson?","Add some optimization to debug builds"],"context":{"gi-language":["default"]}},{"url":"i18n-module.html#i18nxgettext","node_type":"p","page":"I18n module","sections":["I18n module","Usage","i18n.xgettext()"],"context":{"gi-language":["default"]}}]});